{"_type":{"location":"server","name":"chart"},"owner":4,"key":993,"permission":{"switch":"publish","list":[{"target":null,"type":"global","perm":"fork","displayname":"Everyone","username":"and anonymous user"}]},"name":"Bubble Chart","theme":null,"parent":null,"description":"a standard bubble chart","basetype":["5"],"visualencoding":["6"],"category":["1"],"tags":["bubble","size","budget"],"likes":null,"searchable":true,"doc":{"name":"document","size":0,"type":"html","lines":1,"content":""},"style":{"name":"stylesheet","size":0,"type":"css","lines":1,"content":""},"code":{"name":"code","size":7190,"type":"javascript","lines":189,"content":"var module = {};\nmodule.exports = plotdb.chart.create({\n  sample: function() {\n    var count = 50;\n    var value = [{name: \"value\", data: d3.range(count).map(function() { \n      var v = Math.random();\n      if(v < 0.7) return Math.random() + 1;\n      if(v < 0.9) return Math.random() * 5 + 3;\n      return Math.random() * 10 + 6;\n      return Math.random(); \n    })}];\n    var name = [{name: \"name\", data: d3.range(count).map(function() { return plotdb.data.sample.name.rand(); })}];\n    var category = [{name: \"category\", data: d3.range(count).map(function() { return plotdb.data.sample.category.rand(); })}];\n    return {\n      value: value,\n      name: name,\n      category: category\n    };\n  },\n\n  dimension: {\n    value: { type: [plotdb.Number], require: true, desc: \"size of circle\" },\n    name: { type: [], require: false, desc: \"tag of circle\" },\n    category: { type: [], require: false, desc: \"category of circle\"},\n  },\n  config: {\n    fontSize: {},\n    margin: {},\n    bubblePadding: {},\n    palette: {},\n    labelShadowSize: {},\n    showLabel: {},\n    sort: { type: [plotdb.Choice([\"value\",\"category\",\"name\"])], default: \"value\", rebindOnChange: true},\n    catInBubble: { name: \"Cat in Bubble\", type: [plotdb.Boolean], default: true },\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.legendGroup = this.svg.append(\"g\").attr({class: \"legend-group\"});\n    this.popup = plotd3.html.popup(this.root).on(\"mousemove\", function(d,i,popup) {\n      popup.select(\".title\").text(d.name);\n      popup.select(\".value\").text(parseInt(100 * d.value)/100);\n    });\n  },\n  parse: function() {\n    if(this.dimension.category.fields.length) {\n      this.categories = d3.map(this.data, function(d,i) { return d.category; }).keys();\n    } else {\n      this.categories = [];\n    }\n  },\n  bind: function() {\n    var that = this,sel;\n    this.resize();\n    sel = this.svg.selectAll(\"circle\").data(this.nodes);\n    sel.exit().remove();\n    sel = sel.enter().append(\"circle\").attr({opacity: 1});\n    this.popup.nodes(sel);\n    sel = this.svg.selectAll(\"g.label\").data(this.nodes);\n    sel.exit().remove();\n    sel = sel.enter().append(\"g\").attr({class: \"label\"}).each(function(d,i) {\n      var node = d3.select(this);\n      node.append(\"text\").attr({class: \"name shadow\"});\n      node.append(\"text\").attr({class: \"category shadow\"});\n      node.append(\"text\").attr({class: \"name\"});\n      node.append(\"text\").attr({class: \"category\"});\n    });\n    this.popup.nodes(sel);\n    this.circles = this.svg.selectAll(\"circle\");\n    this.labels = this.svg.selectAll(\"g.label\");\n  },\n  resize: function() {\n    var that = this;\n    var box = this.root.getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height;\n    this.legendWidth = (d3.max(this.categories.map(function(d) { return ((d || \"\")+\"\").length;})) + 2) * that.config.fontSize;\n    if(isNaN(this.legendWidth)) this.legendWidth = 0;\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.popup.fontSize(this.config.fontSize);\n    this.cScale = plotdb.Palette.scale.ordinal(this.config.palette);\n    this.legend = plotd3.rwd.legend()\n      .orient(\"right\")\n      .scale(this.cScale)\n      .size([220, this.height - this.config.margin * 2])\n      .tickValues(this.categories)\n      .fontSize(this.config.fontSize);\n    this.legendGroup.call(this.legend).selectAll(\".legend\").on(\"mouseover\",function(d,i) {\n      that.activeGroup = d;\n      that.render();\n    }).on(\"mouseout\",function(d,i) { \n      that.activeGroup = null;\n      that.render();\n    });\n    this.legendSize = this.legend.offset();\n    this.sortby = this.config.sort;\n    this.bubble = d3.layout.pack()\n    .sort(function(a,b) {\n      if(a[that.sortby] < b[that.sortby]) return 1;\n      else if(a[that.sortby] > b[that.sortby]) return -1;\n      return 0;\n    }).padding(this.config.bubblePadding).size([width - this.legendWidth,height]);\n    this.nodes = this.bubble.nodes({children: this.data}).filter(function(it) { return it.depth; });\n    for(var i = 0,n,f1,f2; i < this.nodes.length; i++) {\n      n = this.nodes[i];\n      f1 = n.r * 1.8 / (\"\"+(n.name || \"\")).length;\n      f2 = n.r * 1.8 / (\"\"+(n.category || \"\")).length;\n      n.f1 = (f1 > that.config.fontSize * 1.2 ? that.config.fontSize * 1.2 : f1);\n      if(f1 < 14) n.f1 = 14;\n      n.f2 = (f2 > that.config.fontSize * 0.9 ? that.config.fontSize * 0.9 : f2);\n      n.f2 = (n.f1 < n.f2? n.f1: n.f2);\n      if(n.f2 < 12) n.f2 = 12;\n\n    }\n  },\n  render: function() {\n    var that = this;\n    this.legendGroup.attr({\n      transform: [\"translate(\", this.width - this.legendSize[0] - this.config.margin, (this.height - this.legendSize[1])/2, \")\"].join(\" \")\n    });\n    this.circles.attr({\n      cx: function(it) { return it.x; },\n      cy: function(it) { return it.y; },\n      r:  function(it) { return it.r; }\n    }).style({\n      fill: function(it) { \n        return that.cScale(it.category);\n      },\n      stroke: function(it) {\n        return d3.hsl(that.cScale(it.category)).darker().toString();\n      }\n    });\n    this.circles.transition().attr({ opacity: function(d) {\n      if(!that.activeGroup || d.category == that.activeGroup) return 1;\n      return 0.1;\n    }});\n    this.labels.attr({\n      transform: function(d,i) { return [\"translate(\",d.x,d.y,\")\"].join(\" \"); },\n    }).each(function(d,i) {\n      var node = d3.select(this);\n      node.selectAll(\"text\").attr({\n        \"text-anchor\": \"middle\",\n        \"dominant-baseline\": \"central\",\n        dy: function() {\n          if(!that.config.catInBubble) return 0;\n          return ( d3.select(this).classed(\"name\") ? -1 : 1 ) * (d.f1 + d.f2) / 4;\n        },\n        \"font-size\": function() {\n          return d3.select(this).classed(\"name\") ? d.f1 : d.f2;\n        },\n        \"font-weight\": function() {\n          return d3.select(this).classed(\"name\") ? \"bold\" : \"light\";\n        },\n        opacity: function() {\n          if(!that.config.showLabel) return 0;\n          if(!that.config.catInBubble && d3.select(this).classed(\"category\")) return 0;\n          return 1;\n        },\n        fill: function() {\n          var hsl = d3.hsl(that.cScale(d.category));\n          if(hsl.l > 0.65) return \"#000\"; else return \"#fff\";\n        },\n        stroke: function(it) {\n          if(!d3.select(this).classed(\"shadow\")) return \"none\";\n          var hsl = d3.hsl(that.cScale(it.category));\n          if(hsl.l > 0.65) return \"#fff\"; else return \"#000\";\n        },\n        \"stroke-width\": function(d,i) {\n          if(!d3.select(this).classed(\"shadow\")) return 2;\n          return that.config.labelShadowSize || 0;\n        },\n      }).text(function() { return d3.select(this).classed(\"name\") ? d.name : d.category; });\n    });\n    this.labels.attr({\n      opacity: function(d,i) {\n        var node = d3.select(this);\n        var wName = node.select(\"text.name\")[0][0].getBBox().width;\n        var wCat = node.select(\"text.category\")[0][0].getBBox().width;\n        if(wName >= d.r * 2.2 || wCat >= d.r * 2.2) return 0;\n        return 1;\n      }\n    });\n  }\n});\n"},"assets":[],"config":{"fontSize":{"name":"Font Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":13,"category":"Text","value":"12"},"margin":{"name":"Margin","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":10,"category":"Layout","value":10},"bubblePadding":{"name":"Bubble Padding","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":5,"category":"Layout","value":5},"palette":{"name":"Palette","type":[{"name":"Palette","level":30,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"},"scale":{}}],"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"category":"Color","value":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]}},"labelShadowSize":{"name":"Label Shadow Size","type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"default":2,"category":"Text","value":"2"},"showLabel":{"name":"Show Data Label","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":false,"category":"Switch","value":true},"sort":{"type":[{"default":"","name":"Choice","level":20,"values":["value","category","name"]}],"default":"value","rebindOnChange":true,"name":"Sort data","category":"Value","value":"category"},"catInBubble":{"name":"Cat in Bubble","type":[{"name":"Boolean","default":true,"level":8,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"default":true,"value":true}},"dimension":{"value":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":true,"desc":"size of circle","fields":[]},"name":{"type":[],"require":false,"desc":"tag of circle","fields":[]},"category":{"type":[],"require":false,"desc":"category of circle","fields":[]}},"library":["d3/3.5.12/min","plotd3/0.1.0"],"dimlen":3,"createdtime":"2016-02-19T17:33:10.000Z","modifiedtime":"2016-08-09T09:44:38.000Z","local":null,"ownername":"plotdb","data":[]}