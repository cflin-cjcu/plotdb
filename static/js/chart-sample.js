var x$;x$=angular.module("plotDB"),x$.service("sampleChart",["$rootScope"].concat(function(){var n;return n={doc:{content:""},style:{content:""},code:{content:'module.exports = plotdb.chart.create({\n  name: "New Chart",\n  title: "New Chart",\n  desc: "No Description",\n  author: "Your Name",\n  sample: [0,1,2,3,4,5,6,7,8,9].map(function(it){return {value: it};}),\n  mapping: {\n    value: { type: [plotdb.Number], require: true },\n    name: { type: [], require: false }\n  },\n  config: {\n    padding: { type: [plotdb.Number], default: 10 }\n  },\n  bind: function(root, data, config) {\n    this.svg = d3.select(root).append("svg").attr({\n      width: "100%",\n      height: "100%",\n      viewBox: "0 0 800 600",\n      preserveAspectRatio: "xMidYMid"\n    });\n\n    if(!data || !data.length)\n      data = {children: this.sample};\n    else\n      data = {children: data}\n    var bubble = d3.layout.pack();\n    bubble.padding(config.padding).size([800,600]);\n    nodes = bubble.nodes(data);\n    nodes = nodes.filter(function(it){ return it.parent; });\n\n    var circles = this.svg.selectAll("circle").data(nodes);\n    circles.enter().append("circle");\n    circles.exit().remove();\n  },\n  resize: function(root, data, config) {\n  },\n  render: function(root, data, config) {\n    this.svg.selectAll("circle").attr({\n      cx: function(it) { return it.x; },\n      cy: function(it) { return it.y; },\n      r:  function(it) { return it.r; },\n      fill: "#ccc",\n      stroke: "#444"\n    });\n  }\n});'}}}));