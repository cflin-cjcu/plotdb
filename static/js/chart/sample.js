var x$;x$=angular.module("plotDB"),x$.service("sampleChart",["$rootScope"].concat(function(){var n;return n={doc:{content:"<h3>D3.js Pack Layout Example</h3>"},style:{content:"circle {\n  fill: #ccc;\n  stroke: #777;\n}\n\nh3 {\n  text-align: center;\n  font-family: Arial;\n}"},code:{content:'var module = {};\nmodule.exports = plotdb.chart.create({\n  sample: [0,1,2,3,4,5,6,7,8,9].map(function(it){return {value: it};}),\n  dimension: {\n    value: { type: [plotdb.Number], require: true, desc: "size of circle" },\n    name: { type: [], require: false, desc: "tag of circle" }\n  },\n  config: {\n    padding: { name: "padding", type: [plotdb.Number], default: 10, rebindOnChange: true }\n  },\n  init: function() {\n    this.svg = d3.select(this.root).append("svg").attr({\n      width: "100%", height: "80%",\n      viewBox: "0 0 800 600",\n      preserveAspectRatio: "xMidYMid"\n    });\n  },\n  bind: function() {\n    this.resize();\n    this.circles = this.svg.selectAll("circle").data(this.nodes);\n    this.circles.enter().append("circle");\n    this.circles.exit().remove();\n  },\n  resize: function() {\n    this.bubble = d3.layout.pack().padding(this.config.padding).size([800,600]);\n    this.nodes = this.bubble.nodes({children: this.data}).filter(function(it) { return it.depth; });\n  },\n  render: function() {\n    this.svg.selectAll("circle").attr({\n      cx: function(it) { return it.x; },\n      cy: function(it) { return it.y; },\n      r:  function(it) { return it.r; }\n    });\n  }\n});'}}}));