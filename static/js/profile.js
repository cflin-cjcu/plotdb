// Generated by LiveScript 1.3.1
var x$;
x$ = angular.module('plotDB');
x$.controller('profile', ['$scope', '$http', 'global', 'plNotify', 'dataService', 'chartService', 'themeService'].concat(function($scope, $http, global, plNotify, dataService, chartService, themeService){
  /*data-service.list!then (ret) -> $scope.$apply ->
    $scope.datasets = ret
    d3.select \#dataset-number .transition!duration 1000
      .tween \text, -> -> @textContent = parseInt($scope.datasets.length * it)
  */
  /*
  theme-service.list!then (ret) -> $scope.$apply ->
    $scope.themes = ret
    d3.select \#theme-number .transition!duration 1000
      .tween \text, -> -> @textContent = parseInt($scope.themes.length * it)
  chart-service.list!then (ret) -> $scope.$apply ->
    $scope.charts = ret
    d3.select \#chart-number .transition!duration 1000
      .tween \text, -> -> @textContent = parseInt($scope.charts.length * it)
  */
  $scope.profile = window.profileUser;
  $scope.passwd = {
    oldOne: '',
    newOne: '',
    update: function(){
      return $http({
        url: "/d/me/passwd/",
        method: 'POST',
        data: {
          newpasswd: $scope.passwd.newOne,
          oldpasswd: $scope.passwd.oldOne
        }
      }).success(function(d){
        return plNotify.send('success', "Password changed.");
      }).error(function(d){
        return plNotify.send('success', "Password changing failed, try again later");
      });
    }
  };
  $scope.avatar = {
    update: function(node){
      var fr;
      if (node.files.length === 0) {
        return;
      }
      if (!/image\//.exec(node.files[0].type)) {
        plNotify.send('danger', "Wrong file type, use image instead.");
        return;
      }
      if (node.files[0].size >= 1048576) {
        plNotify.send('danger', "File too large. try another instead. (<1MB) ");
        return;
      }
      plNotify.send('warning', "Uploading avatar...");
      fr = new FileReader();
      fr.onload = function(){
        var raw, fd;
        raw = new Uint8Array(this.result);
        fd = new FormData();
        fd.append('image', new Blob([raw], {
          type: "application/octet-stream"
        }));
        return $http({
          url: '/d/me/avatar',
          method: 'POST',
          data: fd,
          transformRequest: angular.identity,
          headers: {
            "Content-Type": undefined
          }
        }).success(function(d){
          plNotify.send('success', "Avatar Changed.");
          $scope.user.data.avatar = d.avatar;
          return $scope.profile.avatar = d.avatar;
        }).error(function(d){
          return plNotify.send('danger', "Image can't be used, use another image");
        });
      };
      return fr.readAsArrayBuffer(node.files[0]);
    }
  };
  $scope.update = function(){
    return $http({
      url: "/d/user/" + $scope.profile.key,
      method: 'PUT',
      data: $scope.profile
    }).success(function(d){
      return plNotify.send('success', "Profile updated.");
    }).error(function(d){
      return plNotify.send('danger', "Failed: " + d.msg);
    });
  };
  return $scope.su = function(){
    console.log($scope.su.id);
    return $http({
      url: "/d/me/su/" + $scope.su.id,
      method: 'PUT'
    }).then(function(){
      return window.location.reload();
    });
  };
}));