{"theme":null,"basetype":"1","data":[],"type":{"location":"server","name":"chart"},"owner":"o3tgs6","key":"m1wszo","permission":{"switch":["public"],"value":[{"switch":"public","perm":"fork"}]},"name":"Candle Sticks","desc":"a standard candle stick chart","tags":[""],"doc":{"name":"document","type":"html","content":"","lines":1,"size":0},"style":{"name":"stylesheet","type":"css","content":"","lines":1,"size":0},"code":{"name":"code","type":"javascript","content":"var module = {};\nmodule.exports = plotdb.chart.create({\n  sample: [1,2,3,4,5,6,7,8,9,10].map(function(it) {\n    var p = Math.random() * 100;\n    var min = p - Math.random() * 20 - 5;\n    var max = p + Math.random() * 20 + 5;\n    var start = p + Math.random() * 10 - 5;\n    var end = p + Math.random() * 10 - 5;\n    return { min: min, max: max, start: start, end: end} ;\n  }),\n  dimension: {\n    min: { type: [plotdb.Number], require: false, desc: \"minimal value\" },\n    max: { type: [plotdb.Number], require: false, desc: \"maximal value\" },\n    start: { type: [plotdb.Number], require: false, desc: \"start value\" },\n    end: { type: [plotdb.Number], require: false, desc: \"start value\" },\n    order: { type: [plotdb.Number], require: false, desc: \"order of value set\"},\n    name: { type: [], require: false, desc: \"name of value set\"}\n  },\n  config: {\n    padding: { name: \"Padding\", type: [plotdb.Number], default: 10, rebindOnChange: true },\n    margin: { name: \"Margin\", type: [plotdb.Number], default: 10, rebindOnChange: true }\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.xaxisGroup = this.svg.append(\"g\").attr({class: \"axis horizontal\"});\n    this.yaxisGroup = this.svg.append(\"g\").attr({class: \"axis vertical\"});\n    this.values = this.data.map(function(it) {\n      if(it.start > it.end) {\n        it.minInner = it.end;\n        it.maxInner = it.start;\n      } else {\n        it.minInner = it.start;\n        it.maxInner = it.end;\n      }\n      return [it.min, it.max, it.start, it.end].filter(function(it) {\n        return typeof(it) != 'undefined' \n      });\n    }).reduce(function(a,b) { return a.concat(b); }, []);\n    this.orders = this.data.map(function(d, i) { \n      if(typeof(d.order) == 'undefined') d.order = i;\n      return d.order;\n    });\n  },\n  bind: function() {\n    var that = this;\n    this.nodes = this.svg.selectAll(\"g.node\").data(this.data)\n      .enter().append(\"g\").attr({class: \"node\"});\n    this.nodes.each(function(it) {\n      node = d3.select(this);\n      node.append(\"line\");\n      node.append(\"rect\");\n    });\n  },\n  resize: function() {\n    var that = this;\n    var box = this.root.getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height - 10;\n    this.xAxisHeight = 40;\n    this.yAxisWidth = 40;\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.barWidth = (width - this.yAxisWidth) / this.data.length;\n    this.xscale = d3.scale.linear().domain(d3.extent(this.orders)).range([\n      this.barWidth / 2 + this.yAxisWidth + this.config.margin,\n      width - this.barWidth / 2 - this.config.margin\n    ]);\n    this.yscale = d3.scale.linear().domain(d3.extent(this.values)).range([\n      height - this.xAxisHeight - this.config.margin,\n      this.config.margin\n    ]);\n    this.xaxis = d3.svg.axis().scale(this.xscale).orient(\"bottom\").tickSize(3,6);\n    this.xaxisGroup.call(this.xaxis);\n    this.yaxis = d3.svg.axis().scale(this.yscale).orient(\"left\").tickSize(6,6);\n    this.yaxisGroup.call(this.yaxis);\n  },\n  render: function() {\n    var that = this;\n    this.xaxisGroup.attr({\n      transform: function(it) {\n        return [\"translate(\",0,that.height - that.xAxisHeight,\")\"].join(\" \");\n      }\n    })\n    this.xaxisGroup.select(\".domain\").attr({fill: \"none\", stroke: \"#000\"});\n    this.xaxisGroup.selectAll(\"line\").attr({stroke: \"#000\", \"stroke-width\": 2});\n    this.yaxisGroup.attr({\n      transform: function(it) {\n        return [\"translate(\",that.yAxisWidth,0,\")\"].join(\" \");\n      }\n    });\n    this.nodes.select(\"rect\").attr({\n      x: function(it) { return that.xscale(it.order) - that.barWidth / 2 + that.config.padding / 2; },\n      y: function(it) { return that.yscale(it.maxInner); },\n      width: function(it) { return that.barWidth - that.config.padding; },\n      height: function(it) { return that.yscale(it.minInner) - that.yscale(it.maxInner); },\n      fill: function(it) {\n        return (it.end>it.start?\"#0f0\":\"#f00\");\n      },\n      stroke: \"#000\",\n      \"stroke-width\": 2\n    });\n    this.nodes.select(\"line\").attr({\n      x1: function(it) { return that.xscale(it.order); },\n      x2: function(it) { return that.xscale(it.order); },\n      y1: function(it) { return that.yscale(it.max); }, \n      y2: function(it) { return that.yscale(it.min); },\n      stroke: \"#000\",\n      \"stroke-width\": function(it) {\n        var ret = that.barWidth / 20;\n        return (ret>1?ret:1);\n      }\n    });\n  }\n});","lines":118,"size":4590},"config":{"padding":{"name":"Padding","type":[{"name":"Number","level":3}],"default":10,"rebindOnChange":true,"value":"10"},"margin":{"name":"Margin","type":[{"name":"Number","level":3}],"default":10,"rebindOnChange":true,"value":10}},"dimension":{"min":{"type":[{"name":"Number","level":3}],"require":false,"desc":"minimal value"},"max":{"type":[{"name":"Number","level":3}],"require":false,"desc":"maximal value"},"start":{"type":[{"name":"Number","level":3}],"require":false,"desc":"start value"},"end":{"type":[{"name":"Number","level":3}],"require":false,"desc":"start value"},"order":{"type":[{"name":"Number","level":3}],"require":false,"desc":"order of value set"},"name":{"type":[],"require":false,"desc":"name of value set"}},"assets":[],"isType":false,"createdTime":1456215808762,"modifiedTime":1458279666732,"ownerName":"Kirby Wu","likes":0,"parent":null,"visualencoding":["1","3","9"],"category":["5"]}