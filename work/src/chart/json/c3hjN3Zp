{"theme":null,"data":[],"type":{"location":"server","name":"chart"},"owner":"o3tgs6","key":"sxc7vi","permission":{"switch":["public"],"value":[{"switch":"public","perm":"fork"}]},"name":"Hierarchical Bubbles","desc":"tree-like connected bubble chart","tags":[""],"doc":{"name":"document","type":"html","content":"","lines":1,"size":0},"style":{"name":"stylesheet","type":"css","content":"","lines":1,"size":0},"code":{"name":"code","type":"javascript","content":"var module = {};\nmodule.exports = plotdb.chart.create({\n  sample: d3.range(20).map(function(it) {\n    return {\n      value: Math.random(),\n      category: [\"HR\", \"IT\", \"FIN\", \"GM\", \"RD\"][parseInt(Math.random() * 5)],\n      name: [\"Liopleurodon\", \"Candy\", \"Fugu\", \"Charlie\", \"Starfish\", \"Banana\"][parseInt(Math.random() * 6)]\n    };\n  }),\n  dimension: {\n    value: { type: [plotdb.Number], require: true, desc: \"bubble size\" },\n    category: { type: [], require: true, desc: \"category\" },\n    name: {type: [], desc: \"bubble label\"}\n  },\n  config: {\n    margin: { name: \"Margin\", type: [plotdb.Number], default: 10 },\n    padding: { name: \"Padding\", type: [plotdb.Number], default: 10 },\n    palette: { name: \"Palette\", type: [plotdb.Palette], default: plotdb.Palette['default'],\n              hint: plotdb.Palette.qualitative },\n    title: { name: \"Title\", type: [], default: \"Tree\"}\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.lineGroup = this.svg.append(\"g\").attr({class: \"connect\"});\n    this.circleGroup = this.svg.append(\"g\").attr({class: \"data-group\"});\n    this.title = this.svg.append(\"text\");\n    this.parsed = { values: d3.nest().key(function(it) { return it.category; }).entries(this.data) };\n    this.nodes = [];\n    this.categories = d3.nest().key(function(it) { return it.category; }).map(this.data);\n  },\n  bind: function() {\n    var that = this;\n    this.lineGroup.selectAll(\"g.data\").data(this.nodes.filter(function(it) { return it.parent; }))\n    .enter().append(\"g\").attr({class: \"data\"}).each(function(d,i) {\n      var node = d3.select(this);\n      if(d.parent) node.append(\"line\").attr({class: \"connect\"});\n    });\n    this.circleGroup.selectAll(\"g.data\").data(this.nodes)\n    .enter().append(\"g\").attr({class: \"data\"}).each(function(d,i) {\n      var node = d3.select(this);\n      node.append(\"circle\").attr({class: \"data\"});\n      node.append(\"text\").attr({class: \"shadow\"});\n      node.append(\"text\").attr({class: \"label\"});\n    });\n  },\n  resize: function() {\n    var that = this;\n    var box = this.root.getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height - 10;\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.color = d3.scale.ordinal().domain(this.categories).range(this.config.palette.colors.map(function(it) { return it.hex; }));\n    this.nodes = d3.layout.pack()\n      .size([width, height])\n      .padding(10)\n      .children(function(it) { return it.values; })\n      .nodes(this.parsed);\n    this.links = this.nodes.map(function(it) { return {source: it, target: it.parent}; }).filter(function(it) { return it.target; });\n    this.force = d3.layout.force()\n      .size([width, height])\n      .nodes(this.nodes)\n      .links(this.links)\n      .gravity(0.05)\n      .friction(0.2)\n      .charge(function(it) { return -it.r * 300 / ( 3 - it.depth);})\n      .on(\"tick\", function() { that.tick(); })\n      .start();\n  },\n  tick: function() {\n    var ni,nj,r,d,dx,dy,dr,rate;\n    for(var i=0; i< this.nodes.length; i++) {\n      ni = this.nodes[i];\n      rate = (ni.depth>1?0:2 - ni.depth) / 100;\n      ni.x = ni.x + (this.width / 2 - ni.x) * rate;\n      ni.y = ni.y + (this.height / 2 - ni.y) * rate;\n      if(ni.y + ni.r >= this.height - this.config.margin) ni.y -= 1;\n      if(ni.y - ni.r <= this.config.margin) ni.y += 1;\n    }\n    for(var i=0; i<this.nodes.length;i++) {\n      for(var j=0;j<this.nodes.length;j++) {\n        if(i==j) continue;\n        ni = this.nodes[i];\n        nj = this.nodes[j];\n        r = ni.r + nj.r;\n        dx = ni.x - nj.x;\n        dy = ni.y - nj.y;\n        d = Math.sqrt(dx * dx + dy * dy);\n        if(r < d) continue;\n        dr = (r - d) / ( d * 1000);\n        ni.x = ni.x + dx * dr;\n        ni.y = ni.y + dy * dr;\n        nj.x = nj.x - dx * dr;\n        nj.y = nj.y - dy * dr;\n      }\n    }\n    this.render();\n    if(this.force.alpha()<0.011) this.force.alpha(0.012);\n  },\n  render: function() {\n    var that = this;\n    this.lineGroup.selectAll(\"g.data\").attr({\n      transform: function(it) {\n        return [\"translate(\",it.x,\",\",it.y,\")\"].join(\"\");\n      }\n    }).each(function(d,i) {\n      var node = d3.select(this);\n      if(d.parent) node.select(\"line\").attr({\n        x1: 0, x2: d.parent.x - d.x,\n        y1: 0, y2: d.parent.y - d.y,\n        stroke: \"#000\"\n      });\n    });\n    this.circleGroup.selectAll(\"g.data\").attr({\n      transform: function(it) {\n        return [\"translate(\",it.x,\",\",it.y,\")\"].join(\"\");\n      }\n    }).each(function(d,i) {\n      var node = d3.select(this);\n      node.select(\"circle\").attr({\n        cx: 0, cy: 0, r: function(it) { return it.r / (it.values?it.values.length || 1:1); },\n        fill: function(it) { return that.color(it.key || it.category); },\n        stroke: \"none\"\n      });\n      node.select(\"text.label\").attr({\n        \"text-anchor\": \"middle\",\n        \"dominant-baseline\": \"central\",\n        fill: function(it) {\n          var color = d3.hsl(that.color(it.key || it.category));\n          if(color.l > 0.6) color.l = 0.1\n          else color.l = 0.9\n          return color.toString();\n        },\n        \"font-weight\": \"900\",\n        \"stroke-width\": 0\n      }).text(d.name || d.key);\n      node.select(\"text.shadow\").attr({\n        \"text-anchor\": \"middle\",\n        \"dominant-baseline\": \"central\",\n        stroke: function(it) {\n          var color = d3.hsl(that.color(it.key || it.category));\n          if(color.l < 0.6) return \"rgba(0,0,0,1)\"\n          return \"rgba(255,255,255,1)\";\n        },\n        \"font-weight\": \"900\",\n        \"stroke-width\": 5,\n      }).text(d.name || d.key);\n    });\n    var root = this.nodes.filter(function(it) { return !it.parent; });\n    this.title.attr({\n      x: root[0].x,\n      y: root[0].y,\n      \"text-anchor\": \"middle\",\n      \"dominant-baseline\": \"central\",\n      \"font-size\": 25,\n      fill: function() {\n        it = root[0];\n        var color = d3.hsl(that.color(it.key || it.category));\n        if(color.l > 0.6) color.l = 0.1\n        else color.l = 0.9\n        return color.toString();\n      },\n    }).text(this.config.title);\n  }\n});","lines":169,"size":6226},"config":{"margin":{"name":"Margin","type":[{"name":"Number","level":3}],"default":10,"value":"20"},"padding":{"name":"Padding","type":[{"name":"Number","level":3}],"default":10,"value":10},"palette":{"name":"Palette","type":[{"name":"Palette","level":5,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"}}],"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"hint":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"value":{"colors":[{"hex":"#f29c98"},{"hex":"#f5b697"},{"hex":"#f5e797"},{"hex":"#a2e4f5"},{"hex":"#009dd3"}]}},"title":{"name":"Title","type":[],"default":"Tree","value":"Tree"}},"dimension":{"value":{"type":[{"name":"Number","level":3}],"require":true,"desc":"bubble size"},"category":{"type":[],"require":true,"desc":"category"},"name":{"type":[],"desc":"bubble label"}},"assets":[],"isType":false,"createdTime":1458052902429,"modifiedTime":1458279748596,"ownerName":"Kirby Wu","likes":0,"parent":null,"basetype":"8","visualencoding":["6"],"category":["1"]}