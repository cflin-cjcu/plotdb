{"theme":null,"basetype":"4","data":[],"type":{"location":"server","name":"chart"},"owner":"o3tgs6","key":"14gwbt8","permission":{"switch":["public"],"value":[{"switch":"public","perm":"fork"}]},"name":"Multiple Area Chart","desc":"parallel area charts come together.","tags":["information-is-beautiful"],"doc":{"name":"document","type":"html","content":"","lines":1,"size":0},"style":{"name":"stylesheet","type":"css","content":".domain {\n  fill: none;\n  stroke: #000;\n}\n\n.axis .tick line {\n  stroke: #000;\n}","lines":8,"size":79},"code":{"name":"code","type":"javascript","content":"var module = {};\nmodule.exports = plotdb.chart.create({\n  sample: d3.range(100).map(function(idx){\n    return {\n      x: idx,\n      y: d3.range(5).map(function(it) { return Math.random(); })\n    };\n  }),\n  dimension: {\n    y: { type: [plotdb.Number], multiple: true, require: true, desc: \"y coordinate ( value )\" },\n    x: { type: [plotdb.Number], desc: \"x coordinate\" }\n  },\n  config: {\n    fontSize: { name: \"Font Size\", type: [plotdb.Number], default: 12},\n    padding: { name: \"Padding\", type: [plotdb.Number], default: 10},\n    margin: { name: \"Margin\", type: [plotdb.Number], default: 10 },\n    overlap: { name: \"Overlapped\", type: [plotdb.Boolean], default: true },\n    palette: { name: \"Palette\", type: [plotdb.Palette], default: plotdb.Palette['default'],\n      hint: plotdb.Palette.subtype.qualitative }\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.xaxisGroup = this.svg.append(\"g\").attr({class: \"axis horizontal\"});\n    this.xvalues = this.data.map(function(it) { return it.x; });\n    this.xrange = d3.extent(this.xvalues);\n    this.yrange = d3.extent(this.data.map(function(it) { return it.y; }).reduce(function(a,b) { return a.concat(b); }, []));\n    this.chartCount = (this.data[0] || {y: []}).y.length;\n    this.names = this.dimension.y.fieldName || d3.range(this.chartCount).map(function(it) { return \"Doraemon\"; });\n    this.nameMaxLen = d3.max(this.names.map(function(it) { return it.length; })) || 0;\n    this.parsed = [];\n    for(var i=0, block;i<this.chartCount;i++) {\n      block = new Array();\n      for(j=0;j<this.data.length;j++) block.push({y: this.data[j].y[i], x: this.xvalues[j]});\n      this.parsed.push(block);\n    }\n  },\n  bind: function() {\n    var that = this;\n    this.svg.selectAll(\"g.data-group\").data(this.parsed)\n    .enter().append(\"g\").attr({class: \"data-group\"}).each(function(d,i) {\n      var node = d3.select(this);\n      node.append(\"path\").attr({class: \"area data\"});\n      node.append(\"text\").attr({class: \"label\"});\n    });\n    this.xaxisGroup.call(this.xaxis);\n  },\n  resize: function() {\n    var that = this;\n    var box = this.root.getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height - 10;\n    this.yAxisWidth = ( this.nameMaxLen + 2 ) * this.config.fontSize;\n    this.xAxisHeight = 30;\n    this.blockHeight = ( height - this.xAxisHeight - 2 * this.config.margin ) / this.chartCount;\n\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.xscale = d3.scale.linear().domain(this.xrange).range([this.config.margin + that.yAxisWidth, width - this.config.margin]);\n    this.yscale = d3.scale.linear().domain(this.yrange).range([this.blockHeight - this.config.padding / 2, this.config.padding / 2]);\n    this.xaxis = d3.svg.axis().scale(this.xscale).orient(\"bottom\");\n    this.area = d3.svg.area()\n      .interpolate(\"cardinal\")\n      .x(function(it) { return that.xscale(it.x); })\n      .y0(that.yscale(0)).y1(function(it) { return that.yscale(it.y); });\n  },\n  render: function() {\n    var that = this;\n    this.xaxisGroup.attr({\n      transform: [\n        \"translate(\",\n        0,\n        \",\",\n        that.blockHeight * (that.parsed.length)* (that.config.overlap?7/8:1) + that.config.margin,\n        \")\"\n      ].join(\"\")\n    }).select(\".domain\");\n    this.svg.selectAll(\"g.data-group\")\n    .attr({\n      transform: function(d,i) {\n        return \"translate(0,\"+ (\n          (that.config.overlap?((that.blockHeight / 2) * that.parsed.length * 0.5):0) \n           + i * that.blockHeight / (that.config.overlap?2:1) + that.config.margin\n          ) + \")\";\n      }\n    })\n    .each(function(d,i) {\n      var node = d3.select(this);\n      node.select(\"path\").attr({\n        d: that.area,\n        fill: function(d,j) { \n          return that.config.palette.colors[i % that.config.palette.colors.length].hex;\n        }\n      });\n      node.select(\"text\")\n      .attr({\n        x: that.yAxisWidth + that.config.margin - that.config.fontSize,\n        \"text-anchor\": 'end',\n        y: that.yscale(0),\n        dy: -that.config.fontSize / 2,\n        \"dominant-baseline\": \"bottom\"\n      })\n      .text(function(it) { return that.names[i]; });\n    });\n  }\n});","lines":109,"size":4328},"config":{"fontSize":{"name":"Font Size","type":[{"name":"Number","level":3}],"default":12,"value":12},"padding":{"name":"Padding","type":[{"name":"Number","level":3}],"default":10,"value":10},"margin":{"name":"Margin","type":[{"name":"Number","level":3}],"default":10,"value":10},"overlap":{"name":"Overlapped","type":[{"name":"Boolean","level":2}],"default":true,"value":true},"palette":{"name":"Palette","type":[{"name":"Palette","level":5,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"}}],"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"hint":"qualitative","value":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]}}},"dimension":{"y":{"type":[{"name":"Number","level":3}],"multiple":true,"require":true,"desc":"y coordinate ( value )"},"x":{"type":[{"name":"Number","level":3}],"desc":"x coordinate"}},"assets":[],"isType":false,"createdTime":1457923121228,"modifiedTime":1458544385324,"likes":1,"ownerName":"Kirby Wu","parent":null,"visualencoding":["2","6"],"category":["1"]}