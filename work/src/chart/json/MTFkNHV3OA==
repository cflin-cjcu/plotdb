{"theme":"1iswwgc","data":[],"type":{"location":"server","name":"chart"},"owner":"o3tgs6","key":"11d4uw8","permission":{"switch":["public"],"value":[{"switch":"public","perm":"fork"}]},"name":"Difference Chart","desc":"show difference between two lines, a similar chart of William Playfair's work in 1786.","tags":[""],"doc":{"name":"document","type":"html","content":"<h2 style=\"text-align:center\">Different Chart</h2>\n<div style=\"text-align:center\">\n  <label><input type=\"radio\" name=\"align\" checked/> Aligned Difference </label>\n  <span> &nbsp; &nbsp; </span>\n  <label><input type=\"radio\" name=\"align\"/> Difference between Two Line </label>\n</div>","lines":6,"size":281},"style":{"name":"stylesheet","type":"css","content":"","lines":1,"size":0},"code":{"name":"code","type":"javascript","content":"var module = {};\nmodule.exports = plotdb.chart.create({\n  sample: d3.range(100).map(function(it) {\n    return {\n      value1: Math.sin(2 * Math.PI * it / 20) * Math.sin(2 * Math.PI * it / 50),\n      value2: Math.cos(2 * Math.PI * it / 10) * Math.sin(2 * Math.PI * it / 100)\n    };\n  }),\n  dimension: {\n    value1: { type: [plotdb.Number], require: true, desc: \"value of line 1\" },\n    value2: { type: [plotdb.Number], require: true, desc: \"value of line 2\" },\n    order:  {type: [], require: false, desc: \"index of values\"}\n  },\n  config: {\n    fontSize: { name: \"Font Size\", type: [plotdb.Number], default: 12 },\n    margin: { name: \"Margin\", type: [plotdb.Number], default: 10 },\n    padding: { name: \"Padding\", type: [plotdb.Number], default: 10 },\n    color1: {name: \"Positive\", type: [plotdb.Color], default: \"#44ff00\", hint: 'positive'},\n    color2: {name: \"Negative\", type: [plotdb.Color], default: \"#ff9900\", hint: 'negative'},\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.yAxisGroup = this.svg.append(\"g\").attr({class: \"axis vertical\"});\n    this.xAxisGroup = this.svg.append(\"g\").attr({class: \"axis horizontal\"});\n    this.defs = this.svg.append(\"defs\");\n    this.clip1 = this.defs.append(\"clipPath\").attr({id: \"clip1\"}).append(\"path\").datum(this.data);\n    this.clip2 = this.defs.append(\"clipPath\").attr({id: \"clip2\"}).append(\"path\").datum(this.data);\n    this.path1 = this.svg.append(\"path\").datum(this.data);\n    this.path2 = this.svg.append(\"path\").datum(this.data);\n    this.line1 = this.svg.append(\"path\").datum(this.data).attr({class: \"data\"});\n    this.line2 = this.svg.append(\"path\").datum(this.data).attr({class: \"data\"});\n    \n    this.data.forEach(function(it,i) {\n      if(typeof(it.order)==\"undefined\") it.order = i;\n    });\n    this.xrange = d3.extent(this.data.map(function(it,i) { return it.order; }));\n    var yrange1 = d3.extent(this.data.map(function(it) { return it.value1; }));\n    var yrange2 = d3.extent(this.data.map(function(it) { return it.value2; }));\n    this.yrange = d3.extent(yrange1.concat(yrange2));\n    this.ydrange = d3.extent(this.data.map(function(it) { return it.value1 - it.value2; }));\n    this.aligned = true;\n    d3.select(this.root).selectAll(\"input\").on(\"click\",function(d,i) {\n      that.aligned = (i==0);\n      that.resize();\n      that.render();\n    });\n  },\n  bind: function() {\n    var that = this;\n  },\n  resize: function() {\n    var that = this;\n    var box = this.root.getBoundingClientRect();\n    var svgbox = d3.select(this.root).select(\"svg\")[0][0].getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height - 10 - svgbox.top;\n    var m = that.config.margin;\n    this.yAxisWidth = 40;\n    this.xAxisHeight = 20 + this.config.fontSize * 2;\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.xscale = d3.scale.linear()\n      .domain(this.xrange)\n      .range([this.yAxisWidth + that.config.fontSize + m, width - m - that.config.fontSize]).nice();\n    if(this.aligned) {\n      this.yscale = d3.scale.linear().domain(this.ydrange).range([height - m - this.xAxisHeight, m]).nice();\n    } else {\n      this.yscale = d3.scale.linear().domain(this.yrange).range([height - m - this.xAxisHeight, m]).nice();\n    }\n    this.line = d3.svg.line()\n      .interpolate(\"basis\")\n      .x(function(it) { return that.xscale(it.order); });\n    this.area = d3.svg.area()\n      .interpolate(\"basis\")\n      .x(function(it) { return that.xscale(it.order); });\n    console.log(\">>>\", this.config);\n    this.yAxis = d3.svg.axis()\n      .orient(\"left\").scale(this.yscale)\n      .tickSize(this.config.axisInnerTickSize, this.config.axisOuterTickSize);\n    this.yAxisGroup.call(this.yAxis);\n    this.xAxis = d3.svg.axis()\n      .orient(\"bottom\").scale(this.xscale)\n      .tickSize(this.config.axisInnerTickSize, this.config.axisOuterTickSize);\n    this.xAxisGroup.call(this.xAxis);\n  },\n  render: function() {\n    var that = this;\n    this.yAxisGroup.attr({\n      transform: function(d,i) {\n        return [\"translate(\",that.yAxisWidth + that.config.fontSize,\",\",0,\")\"].join(\"\");\n      }\n    });\n    this.xAxisGroup.attr({\n      transform: function(d,i) {\n        return [\"translate(0,\",that.height - that.xAxisHeight - that.config.fontSize,\")\"].join(\"\");\n      }\n    });\n    this.path1.transition().duration(500).attr({\n      d: this.area\n        .y1(function(it) {\n          return that.yscale((that.aligned?it.value1 - it.value2:it.value1));\n        })\n        .y0(function(it) { return that.height; })\n    });\n    this.clip2.transition().duration(500).attr({\n      d: this.area\n        .y1(function(it) { return that.aligned?0:that.yscale(it.value1); })\n        .y0(function(it) { return that.yscale((that.aligned?0:it.value2)); })\n    });\n    \n    this.path2.transition().duration(500).attr({\n        d: this.area\n          .y1(function(it) {return 0;})\n          .y0(function(it) {\n            return that.yscale(that.aligned?it.value1 - it.value2:it.value1);\n          })\n    });\n    this.clip1.transition().duration(500).attr({\n      d: this.area\n        .y1(function(it) { return that.yscale(that.aligned?0:it.value2); })\n        .y0(function(it) { return that.height; })\n\n    });\n    this.path1.attr({\n      \"clip-path\": \"url(#clip2)\",\n      fill: this.config.color1\n    });\n    this.path2.attr({\n      \"clip-path\": \"url(#clip1)\",\n      fill: this.config.color2\n    });\n    this.line1.transition().duration(500).attr({\n      d: this.line.y(function(it) {\n        return (that.yscale(that.aligned?it.value1 - it.value2:it.value1));\n      }),\n      fill: \"none\",\n      stroke: d3.rgb(that.config.color1).darker(1).toString(),\n      \"stroke-width\": 3\n    });\n    this.line2.transition().duration(500).attr({\n      d: this.line.y(function(it) {\n        return (that.yscale(that.aligned?0:it.value2));\n      }),\n      fill: \"none\",\n      stroke: d3.rgb(that.config.color2).darker(1).toString(),\n      \"stroke-width\": 3\n    });\n  }\n});","lines":153,"size":6105},"config":{"fontSize":{"name":"Font Size","type":[{"name":"Number","level":3}],"default":12,"value":10},"margin":{"name":"Margin","type":[{"name":"Number","level":3}],"default":10,"value":10},"padding":{"name":"Padding","type":[{"name":"Number","level":3}],"default":10,"value":10},"color1":{"name":"Positive","type":[{"name":"Color","level":4,"default":"#dc4521","subtype":{"negative":"negative","positive":"positive"}}],"default":"#44ff00","hint":"positive","value":"#71a4a8"},"color2":{"name":"Negative","type":[{"name":"Color","level":4,"default":"#dc4521","subtype":{"negative":"negative","positive":"positive"}}],"default":"#ff9900","hint":"negative","value":"#e9804f"},"radius":{"_bytheme":true,"type":[{"name":"Number","level":3}],"default":10},"axisInnerTickSize":{"_bytheme":true,"type":[{"name":"Number","level":3}],"default":1},"axisOuterTickSize":{"_bytheme":true,"type":[{"name":"Number","level":3}],"default":1}},"dimension":{"value1":{"type":[{"name":"Number","level":3}],"require":true,"desc":"value of line 1"},"value2":{"type":[{"name":"Number","level":3}],"require":true,"desc":"value of line 2"},"order":{"type":[],"require":false,"desc":"index of values"}},"assets":[],"isType":false,"createdTime":1457428979883,"modifiedTime":1458550622726,"likes":0,"ownerName":"Kirby Wu","parent":null,"basetype":"4","visualencoding":["6"],"category":["5"]}