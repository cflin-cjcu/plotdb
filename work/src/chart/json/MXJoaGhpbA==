{"theme":"1iswwgc","basetype":"7","visualencoding":["10"],"category":["4","6"],"data":[],"type":{"location":"server","name":"chart"},"owner":"o3tgs6","key":"1rhhhil","permission":{"switch":["public"],"value":[{"switch":"public","perm":"fork"}]},"name":"Calendar Chart","desc":"a standard calendar chart. reference: https://www.washingtonpost.com/news/wonk/wp/2015/10/01/2015-274-days-294-mass-shootings-hundreds-dead/","tags":[],"doc":{"name":"document","type":"html","content":"","lines":1,"size":0},"style":{"name":"stylesheet","type":"css","content":"","lines":1,"size":0},"code":{"name":"code","type":"javascript","content":"var module = {};\nmodule.exports = plotdb.chart.create({\n  sample: d3.range(365).map(function(it) {\n    return {\n      date: new Date().getTime() - it * 86400000,\n      value: Math.random()\n    };\n  }),\n  dimension: {\n    date: { type: [plotdb.Date], require: false, desc: \"\" },\n    value: { type: [plotdb.Number], require: true, desc: \"\" }\n  },\n  config: {\n    padding: { name: \"Padding\", type: [plotdb.Number], default: 10 },\n    margin: { name: \"Margin\", type: [plotdb.Number], default: 10 },\n    fontSize: { name: \"Font Size\", type: [plotdb.Number], default: 12 },\n    palette: { name: \"Palette\", type: [plotdb.Palette], default: plotdb.Palette.default,\n              hint: plotdb.Palette.subtype.sequential }\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.datagroup = this.svg.append(\"g\").attr({class: \"data-group\"});\n    this.valuerange = this.data.map(function(it) { return it.value; });\n    this.daterange = this.data.map(function(it) { return it.date; });\n    this.months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n    this.days = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thr\",\"Fri\",\"Sat\"];\n    var lastMonth = new Date(this.daterange[1]).getMonth();\n    var lastYear = new Date(this.daterange[1]).getYear() + 1900;\n    var alignedLastDate = new Date(lastYear, lastMonth, 1);\n    this.dates = [];\n    this.datehash = {};\n    for(var i=0,j=0;i<12;i++) {\n      if(lastMonth - i < 0) j = 1;\n      var y = lastYear - j, m = (12 + lastMonth - i)%12\n      var date = {index: new Date(y, m, 1), days: []};\n      this.dates = [date].concat(this.dates);\n      this.datehash[date.index.getYear() + \"-\" + date.index.getMonth()] = date;\n      var k = 0;\n      while(true) {\n        var d = new Date(y, m, 1 + k);\n        if(d.getMonth() != m) break;\n        date.days.push(d);\n        k++;\n      }\n    }\n    this.data.forEach(function(it) {\n      d = new Date(it.date);\n      date = that.datehash[(d.getYear() + \"-\" + d.getMonth())];\n      if(!date) {\n        console.log(d.getMonth());\n        return;\n      }\n      date.days[d.getDate() - 1].value = it.value;\n    });\n  },\n  bind: function() {\n    var that = this;\n    this.datagroup.selectAll(\"g.data-group.sub\").data(this.dates)\n    .enter().append(\"g\").attr({class: \"data-group sub\"})\n    .each(function(d,i) {\n      var node = d3.select(this);\n      node.append(\"text\").attr({class: \"month\"}).text(that.months[d.index.getMonth()]);\n      node.selectAll(\"text.day\").data(that.days)\n        .enter().append(\"text\").attr({class: \"day\"}).text(function(it) { return it; });\n      var g = node.selectAll(\"g\").data(d.days)\n      .enter().append(\"g\")\n      .each(function(d,i) {\n        var node = d3.select(this);\n        node.append(\"rect\").attr({class: \"data\"});\n        node.append(\"text\");\n      });\n    });\n  },\n  resize: function() {\n    var that = this;\n    var box = this.root.getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height - 10;\n    this.blocksize = (width / 33 > height / 24 ? height / 24 : width / 33);\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.cscale = d3.scale.quantile().domain([0,this.valuerange[1]]).range(this.config.palette.colors.map(function(it) { return it.hex; }));\n  },\n  render: function() {\n    var that = this;\n    this.datagroup.attr({\n      transform: \"translate(\" + ( this.config.margin + this.blocksize ) + \",0)\"\n    });\n    this.svg.selectAll(\"g.data-group.sub\").attr({\n      transform: function(d,i) {\n        var x = ( i % 4 )  * that.blocksize * 8;\n        var y = parseInt(i / 4) * that.blocksize * 8;\n        return [\"translate(\", x, \",\", y, \")\"].join(\"\");\n      }\n    }).each(function(data,i) {\n      var node = d3.select(this);\n      node.select(\"text.month\").attr({\n        x: that.blocksize * 3.5,\n        y: that.blocksize * 0.5,\n        \"text-anchor\": \"middle\",\n        \"dominant-baseline\": \"hanging\"        \n      });\n      node.selectAll(\"text.day\").attr({\n        x: function(d,i) { return (i + 0.5) * that.blocksize; },\n        y: that.blocksize * 1.5,\n        \"text-anchor\": \"middle\",\n        \"dominant-baseline\": \"central\",\n        \"font-size\": that.blocksize / 3\n      });\n      node.selectAll(\"g\").attr({\n        transform: function(d,i) {\n          var x = d.getDay() * that.blocksize;\n          var y = parseInt(2 + (i + data.index.getDay()) / 7) * that.blocksize;\n          return [\"translate(\", x, \",\", y, \")\"].join(\"\");\n        }\n      }).each(function(d,i) {\n        var node = d3.select(this);\n        node.select(\"rect\").attr({\n          x: 0, y: 0,\n          width: that.blocksize * 0.9,\n          height: that.blocksize * 0.9,\n          class: function(d,i) {\n            var ret = that.cscale(d.value);\n            return (ret?\"data\":\"data empty\");\n          },\n          fill: function(d,i) { \n            var ret = that.cscale(d.value);\n            return (ret?ret:\"none\");\n          }\n        });\n        node.select(\"text\").attr({\n          class: function(d,i) {\n            var hsl = d3.hsl(that.cscale(d.value));\n            if(hsl.l>0.6) return \"dark\"; else return \"light\";\n          },\n          dx: that.blocksize * 0.9 / 2,\n          dy: that.blocksize * 0.9 / 2,\n          \"text-anchor\": \"middle\",\n          \"dominant-baseline\": \"central\",\n          \"font-size\": (that.config.fontSize > that.blocksize / 2 ? that.blocksize / 2: that.config.fontSize),\n          fill: function(d,i) {\n            var hsl = d3.hsl(that.cscale(d.value));\n            if(hsl.l>0.6) return \"#000\"; else return \"#fff\";\n          }\n        }).text(d.getDate());\n      });\n    });\n  }\n});","lines":153,"size":5748},"config":{"padding":{"name":"Padding","type":[{"name":"Number","level":3}],"default":10,"value":10},"margin":{"name":"Margin","type":[{"name":"Number","level":3}],"default":10,"value":10},"fontSize":{"name":"Font Size","type":[{"name":"Number","level":3}],"default":12,"value":20},"palette":{"name":"Palette","type":[{"name":"Palette","level":5,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"}}],"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"hint":"sequential","value":{"colors":[{"hex":"#ffffff"},{"hex":"#e8e8e8"},{"hex":"#e2c4b7"},{"hex":"#e8926d"},{"hex":"#e86c36"}]}},"radius":{"_bytheme":true,"type":[{"name":"Number","level":3}],"default":10},"axisInnerTickSize":{"_bytheme":true,"type":[{"name":"Number","level":3}],"default":1},"axisOuterTickSize":{"_bytheme":true,"type":[{"name":"Number","level":3}],"default":1}},"dimension":{"date":{"type":[{"name":"Date","level":2}],"require":false,"desc":""},"value":{"type":[{"name":"Number","level":3}],"require":true,"desc":""}},"assets":[],"isType":false,"likes":0,"parent":null,"createdTime":1458567147745,"ownerName":"Kirby Wu","modifiedTime":1458577210786}