{"theme":null,"data":[],"type":{"location":"server","name":"chart"},"owner":"o3tgs6","key":"1fo5it1","permission":{"switch":["public"],"value":[{"switch":"public","perm":"fork"}]},"name":"Circular Bubbles","desc":"Bubbles orbit a donut chart","tags":[""],"doc":{"name":"document","type":"html","content":"","lines":1,"size":0},"style":{"name":"stylesheet","type":"css","content":"","lines":1,"size":0},"code":{"name":"code","type":"javascript","content":"var module = {};\nmodule.exports = plotdb.chart.create({\n  sample: d3.range(1000).map(function(it) {\n    var radius = Math.random();\n    radius = Math.pow(Math.random(), 30) + Math.pow(Math.random() * 0.2, 2);\n    return {\n      radius: radius,\n      distance: radius,\n      angle: Math.random()\n    };\n  }),\n  dimension: {\n    radius: { type: [plotdb.Number], require: false, desc: \"\" },\n    distance: {type: [plotdb.Number], require: true, desc: \"\"},\n    angle: {type: [plotdb.Number], require: true, desc: \"\"},\n  },\n  config: {\n    padding: { name: \"Padding\", type: [plotdb.Number], default: 10 },\n    palette: { name: \"Palette\", type: [plotdb.Palette], rebindOnChange: true,\n      default: plotdb.Palette['default'], hint: plotdb.Palette.subtype.sequential},\n    ringSize: { name: \"Ring Size\", type: [plotdb.Number], default: 100},\n    bubbleMax: { name: \"Bubble Radius\", type: [plotdb.Number], default: 30}\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.radiusGrids = this.svg.append(\"g\").attr({class: \"grid-group radius\"});\n    this.radiusGrids.selectAll(\"circle.grid.radius\").data([0,0.25,0.5,0.75,1]).enter().append(\"circle\").attr({class: \"grid radius\"});\n    this.ringGroup = this.svg.append(\"g\");\n    this.arange = d3.extent(this.data.map(function(it) { return it.angle; }));\n    this.drange = d3.extent(this.data.map(function(it) { return it.distance; }));\n    this.rrange = d3.extent(this.data.map(function(it) { return it.radius; }));\n  },\n  bind: function() {\n    var that = this;\n    this.svg.selectAll(\"circle.data\").data(this.data)\n      .enter().append(\"circle\").attr({class: \"data\"});\n    this.ringhash = {};\n    this.ringdata = [];\n    var delta = that.arange[1] - that.arange[0];\n    var len = this.config.palette.colors.length;\n    var size = 1 / len;\n    var sum = 0;\n    for(var i = 0; i < this.data.length; i++) {\n      var it = this.data[i];\n      var value = (it.angle - that.arange[0]) / (that.arange[1] - that.arange[0]) + size/2;\n      if(value>=1) value -= 1;\n      value = parseInt(value * len);\n      if(!this.ringhash[value]) this.ringhash[value] = {value: 0, offset: 0};\n      this.ringhash[value].value += it.radius;\n      sum += it.radius;\n    }\n    var offset = 0;\n    var ring\n    for(var i=0;i<len;i++) {\n      this.ringhash[i].value = Math.PI * 2 * (this.ringhash[i].value / sum);\n      this.ringhash[i].offset = offset;\n      this.ringhash[i].color = this.config.palette.colors[i].hex;\n      offset = offset + this.ringhash[i].value;\n      this.ringdata.push(this.ringhash[i]);\n    }\n    /*d3.range(this.config.palette.colors.length + 1).map(function(it) {\n      return d3.quantile(that.arange, it / that.config.palette.colors.length);\n    });\n    for(var i = 0; i < this.data.length; i++ ) {\n    }*/\n    this.ringGroup.selectAll(\"path.data\").data(this.ringdata)\n      .enter().append(\"path\").attr({class: \"data\"});\n  },\n  resize: function() {\n    var that = this;\n    var box = this.root.getBoundingClientRect();\n    var svgbox = this.svg[0][0].getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height - 10 - svgbox.top;\n    this.size = (width>height?height:width)/2;\n    this.center = [width/2, height/2];\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.ascale = d3.scale.linear().domain(this.arange).range([0,Math.PI*2]);\n    this.dscale = d3.scale.linear().domain(this.drange).range([this.config.ringSize, this.size - 30]);\n    this.rscale = d3.scale.linear().domain(this.rrange).range([1, that.config.bubbleMax]);\n    this.cscale = d3.scale.linear().domain(\n      d3.range(this.config.palette.colors.length + 1).map(function(it) { \n        return d3.quantile(that.arange, it / that.config.palette.colors.length)\n      })\n    ).range(\n      this.config.palette.colors.map(function(it) { return it.hex; }).concat(this.config.palette.colors[0].hex)\n    );\n    this.arc = d3.svg.arc().innerRadius(this.config.ringSize - 15).outerRadius(this.config.ringSize - 5);\n  },\n  render: function() {\n    var that = this;\n    this.svg.selectAll(\"circle.data\").attr({\n      cx: function(it) {\n        return that.center[0] + that.dscale(it.distance) * Math.cos(that.ascale(it.angle));\n      },\n      cy: function(it) {\n        return that.center[1] + that.dscale(it.distance) * Math.sin(that.ascale(it.angle));\n      },\n      r: function(it) {\n        return (it.radius?that.rscale(it.radius):15);\n      },\n      fill: function(it) {\n        return that.cscale(it.angle);\n      },\n      opacity: 0.8\n    });\n    this.svg.selectAll(\"circle.grid.radius\").attr({\n      cx: this.center[0],\n      cy: this.center[1],\n      r: function(it) {\n        return that.dscale(that.drange[1] * it);\n      },\n      fill: \"none\",\n      \"stroke-dasharray\": \"2 4\",\n      stroke: \"#ddd\",\n      \"stroke-width\": 1.5\n    });\n    this.ringGroup.attr({\n      transform: function() {\n        return [\"translate(\", that.width / 2,\",\", that.height / 2,\")\"].join(\"\");\n      }\n    });\n    this.svg.selectAll(\"path.data\").attr({\n      d: function(d,i) {\n        return that.arc.startAngle(d.offset).endAngle(d.offset + d.value)();\n      },\n      fill: function(it) { return it.color; }\n    });\n  }\n});","lines":135,"size":5334},"config":{"padding":{"name":"Padding","type":[{"name":"Number","level":3}],"default":10,"value":10},"palette":{"name":"Palette","type":[{"name":"Palette","level":5,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"}}],"rebindOnChange":true,"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"hint":"sequential","value":{"colors":[{"hex":"#f4502a"},{"hex":"#f1c227"},{"hex":"#008a6d"},{"hex":"#00acdb"},{"hex":"#0064a8"}]}},"ringSize":{"name":"Ring Size","type":[{"name":"Number","level":3}],"default":100,"value":100},"bubbleMax":{"name":"Bubble Radius","type":[{"name":"Number","level":3}],"default":30,"value":"10"}},"dimension":{"radius":{"type":[{"name":"Number","level":3}],"require":false,"desc":""},"distance":{"type":[{"name":"Number","level":3}],"require":true,"desc":""},"angle":{"type":[{"name":"Number","level":3}],"require":true,"desc":""}},"assets":[],"isType":false,"createdTime":1457522909783,"modifiedTime":1458278824425,"ownerName":"Kirby Wu","likes":0,"parent":null,"basetype":"6","visualencoding":["3","4","5","6","9"],"category":["99"]}