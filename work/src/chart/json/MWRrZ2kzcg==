{"theme":null,"config":{"padding":{"name":"Padding","type":[{"name":"Number","level":3}],"default":10,"rebindOnChange":true,"value":10},"palette":{"name":"Palette","type":[{"name":"Palette","level":5,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"}}],"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"hint":"qualitative","value":{"colors":[{"hex":"#94c39a"},{"hex":"#b7b7b7"},{"hex":"#ff7d7d"},{"hex":"#c61c1c"},{"hex":"#790000"}]}},"radius":{"_bytheme":true,"type":[{"name":"Number","level":3}],"default":10},"margin":{"_bytheme":true,"type":[{"name":"Number","level":3}],"default":10},"axisInnerTickSize":{"_bytheme":true,"type":[{"name":"Number","level":3}],"default":1},"axisOuterTickSize":{"_bytheme":true,"type":[{"name":"Number","level":3}],"default":1}},"dimension":{"value":{"type":[{"name":"Number","level":3}],"require":true,"multiple":true,"desc":"size of wedge"},"category":{"type":[],"require":false,"desc":"category for each data"},"order":{"type":[],"require":false,"desc":"order of wedge"},"name":{"type":[],"require":false,"desc":"name of wedge"}},"data":[],"type":{"location":"server","name":"chart"},"owner":"o3tgs6","key":"1dkgi3r","permission":{"switch":["public"],"value":[{"switch":"public","perm":"fork"}]},"name":"Nightingale's Rose","desc":"A classic chart which was used by Nightingale in 1959 to depict the deaths in hospital in Crimea war.","tags":[""],"doc":{"name":"document","type":"html","content":"<h1>Nightingale's Rose</h1>","lines":1,"size":27},"style":{"name":"stylesheet","type":"css","content":" \nsvg, body {\n  background: #fff;\n}\nsvg, body, text {\n  font-family: arial;\n  color: #222;\n  fill: #222;\n  font-size: 12px;\n}\ntext {\n  text-anchor: middle;\n  dominant-baseline: central;\n}\ncircle, rect, path {\n  fill: #eee;\n  stroke: #fff;\n  stroke-width: 1.5;\n}\nh1 {\n  text-align: center;\n  font-family: Arial;\n}","lines":23,"size":312},"code":{"name":"code","type":"javascript","content":"var module = {};\nmodule.exports = plotdb.chart.create({\n  sample: d3.range(20).map(function(it) {\n    return {\n     value: d3.range(4).map(function(it) { return Math.random(); }),\n      name: [\"Alice\",\"Bob\",\"Cynthia\",\"David\",\"Edward\"][parseInt(Math.random()*5)]\n    };\n  }),\n  dimension: {\n    value: { type: [plotdb.Number], require: true, multiple: true, desc: \"size of wedge\" },\n    category: { type: [], require: false, desc: \"category for each data\"},\n    order: { type: [], require: false, desc: \"order of wedge\" },\n    name: { type: [], require: false, desc: \"name of wedge\" }\n  },\n  config: {\n    padding: { name: \"Padding\", type: [plotdb.Number], default: 10, rebindOnChange: true },\n    palette: { name: \"Palette\", type: [plotdb.Palette], default: plotdb.Palette.default,\n             hint: plotdb.Palette.subtype.qualitative}\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.wedgeGroup = this.svg.append(\"g\").attr({class: \"wedgegroup\"});\n    this.values = this.data.map(function(it) { return it.value; })\n      .reduce(function(a,b) { return a.concat(b); }, []);\n    var f = this.dimension.value.fieldName;\n    for(var idx = 0; idx < this.data.length; idx ++ ) {\n      this.data[idx].parsed = this.data[idx].value.map(function(it,i) {\n        return {\n          data: that.data[idx],\n          value: it,\n          name: (f && f[idx]?f[idx]:i),\n          idx: idx\n        };\n      });\n    }\n  },\n  bind: function() {\n    this.wedge = this.wedgeGroup.selectAll(\"g.wedge\").data(this.data)\n      .enter().append(\"g\").attr({class: \"wedge\"}).each(function(it) {\n        var node = d3.select(this).selectAll(\"path.wedge\").data(it.parsed)\n          .enter().append(\"path\").attr({class: \"wedge\"});\n        node.sort(function(a,b) {\n          return b.value - a.value;\n        });\n      });\n  },\n  resize: function() {\n    var box = this.root.getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height - 100;\n    this.size = (width > height? height : width) / 2;\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.rscale = d3.scale.linear()\n      .domain([0, d3.max(this.values)])\n      .range([0, this.size]);\n    this.ascale = d3.scale.linear()\n      .domain([0, this.data.length])\n      .range([0, Math.PI * 2]);\n    this.colors = d3.scale.ordinal()\n      .range(this.config.palette.colors.map(function(it) { return it.hex; }));\n  },\n  render: function() {\n    var that = this;\n    this.wedgeGroup.attr({\n      transform: function(it) {\n        return [\n          \"translate(\",\n          that.width / 2,\n          \" \",\n          that.height / 2,\n          \")\"\n        ].join(\"\");\n      }\n    });\n    this.wedge.selectAll(\"path.wedge\").attr({\n      d: function(it) {\n  \t    var i = it.idx;\n        var largeArc = (that.data.length > 1 ? 0 : 1);\n        var r = that.rscale(it.value);\n        var x1 = (Math.sin(that.ascale(i)) * r);\n        var y1 = -(Math.cos(that.ascale(i)) * r);\n        var x2 = (Math.sin(that.ascale(i + 1)) * r);\n        var y2 = -(Math.cos(that.ascale(i + 1)) * r);\n        var ret = [\n          \"M\", 0, 0,\n          \"L\", x1, y1,\n          \"A\", r, r, 0, largeArc, 1, x2, y2,\n          \"L\", 0, 0,\n          \"Z\"\n        ].join(\" \");\n        return ret;\n      }\n    }).style({\n      opacity: 0.9,\n      fill: function(it) { return that.colors(it.name); }\n    });\n  }\n});","lines":103,"size":3520},"assets":[],"isType":false,"createdTime":1455986904512,"modifiedTime":1458552318201,"ownerName":"Kirby Wu","likes":0,"parent":null,"basetype":"6","visualencoding":["6"],"category":["5"]}