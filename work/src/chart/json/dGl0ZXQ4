{"0":"t","1":"i","2":"t","3":"e","4":"t","5":"8","6":"s","7":"s","8":"o","9":"4","10":"x","11":"i","12":"5","13":"2","14":"9","theme":null,"config":{"padding":{"type":[{"name":"Number","level":3}],"default":10,"rebindOnChange":true,"value":10},"palette":{"type":[{"name":"Palette","level":5,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"}}],"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"hint":"qualitative","value":{"colors":[{"hex":"#7a322a"},{"hex":"#d52c2a"},{"hex":"#f93634"},{"hex":"#dddb83"},{"hex":"#ede6de"},{"hex":"#fdfffa"},{"hex":"#dbdbdb"},{"hex":"#48462d"}]}},"radius":{"_bytheme":true,"type":[{"name":"Number","level":3}],"default":10},"margin":{"_bytheme":true,"type":[{"name":"Number","level":3}],"default":10},"axisInnerTickSize":{"_bytheme":true,"type":[{"name":"Number","level":3}],"default":1},"axisOuterTickSize":{"_bytheme":true,"type":[{"name":"Number","level":3}],"default":1}},"dimension":{"size":{"type":[{"name":"Number","level":3}],"require":true,"desc":"Size of circle"},"rate":{"type":[{"name":"Percent","level":3}],"require":true,"desc":"X position of circle"},"name":{"type":[],"require":false,"desc":"Name of Data"},"category":{"type":[{"name":"String","level":1}],"require":true,"desc":"Category of Data"}},"data":[],"type":{"location":"server","name":"chart"},"owner":"o3tgs6","key":"titet8","permission":{"switch":["public"],"value":[{"switch":"public","perm":"fork"}]},"name":"Sorted Bubbles","desc":"categorized bubble chart along x-axis","tags":[""],"doc":{"name":"document","type":"html","content":"<div class=\"button-group\">\n<div class=\"button\" id=\"btn-whole\">Whole Picture</div>\n<div class=\"button\" id=\"btn-category\">by Category</div>\n</div>\n<div id=\"chartPopup\">\n  <div id=\"chartTitle\"><span id=\"chartTitleText\"></span><small id=\"chartCategory\"></small></div>\n  <div id=\"chartRate\"></div>\n  <div id=\"chartValue\"></div>\n</div>","lines":9,"size":329},"style":{"name":"stylesheet","type":"css","content":".button-group {\n  margin: 10px\n}\n\n.button {\n  padding: 2px 8px;\n  border: 1px solid #ccc;\n  background: #fff;\n  box-shadow: 0 1px 2px rgba(0,0,0,0.2); \n  display: inline-block;\n  color: #999;\n  font-weight: light;\n  cursor: pointer;\n}\n\n.button.active {\n  box-shadow: inset 0 -1px 2px rgba(0,0,0,0.2);\n  background: #eee;\n  color: #000;\n  font-weight: bold;\n}\n\n#chartPopup {\n  position: absolute;\n  top: 100px;\n  left: 100px;\n  background: #fff;\n  border: 1px solid #ccc;\n  box-shadow: 0 2px 2px rgba(0,0,0,0.3);\n  border-radius: 2px;\n  width: 160px;\n  height: 70px;\n  margin-left: -80px;\n  margin-top: 25px;\n  padding: 10px 5px;\n  display: none;\n  text-align: center;\n}\n#chartTitleText {\n  height: 20px;\n  font-size: 1.2em;\n  font-weight: bold;\n}\n#chartCategory {\n  font-weight: light;\n}\n#chartRate {\n  font-size: 0.8em;\n  margin-bottom: 5px;\n  margin-top: 5px;\n}\n\n#chartValue {\n  font-size: 0.9em;\n}","lines":55,"size":900},"code":{"name":"code","type":"javascript","content":"module = {};\nmodule.exports = plotdb.chart.create({\n  name: \"New Chart\",\n  title: \"New Chart\",\n  desc: \"No Description\",\n  author: \"Your Name\",\n  sample: d3.range(200).map(function(it){\n    var U = Math.random();\n    var V = Math.random();\n    var X = d3.range(12).map(function() { return Math.random(); })\n      .reduce(function(a,b) { return a + b}, 0);\n    return {\n      size: parseInt((Math.random()*20 + 5)),\n      rate: X * 100,\n      name: [\"John\",\"James\",\"Amelie\",\"Jack\",\"Bob\",\"Sharon\",\"Jobs\",\"Steve\",\"Emy\",\"Eva\"][parseInt(Math.random()*10)],\n      category: [\"IT\",\"HR\",\"FIN\",\"GM\",\"RD\"][it % 5]\n    };\n  }),\n  dimension: {\n    size: { type: [plotdb.Number], require: true, desc: \"Size of circle\" },\n    rate: { type: [plotdb.Percent], require: true, desc: \"X position of circle\" },\n    name: { type: [], require: false, desc: \"Name of Data\" },\n    category: { type: [plotdb.String], require: true, desc: \"Category of Data\"}\n  },\n  config: {\n    padding: { type: [plotdb.Number], default: 10, rebindOnChange: true },\n    palette: { type: [plotdb.Palette], default: plotdb.Palette['default'],\n             hint: plotdb.Palette.subtype.qualitative}\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\").attr({\n      width: \"100%\",\n      height: \"100%\",\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    for(var idx = 0; idx < this.data.length ;idx ++ ){\n      this.data[idx].radius = Math.sqrt( this.data[idx].size );\n    }\n    this.radiusRange = this.data.map(function(it) { return it.radius; });\n    this.categories = d3.map(this.data, function(it) { return it.category; }).keys();\n    this.categorySize = d3.max(this.categories.map(function(it) { return it.length; }));\n    var ratescale = d3.scale.linear()\n      .domain(d3.extent(this.data.map(function(it) { return it.rate;})))\n      .range([0,100]);\n    for(var idx = 0; idx < this.data.length; idx ++) {\n      this.data[idx].rate = ratescale(this.data[idx].rate);\n    }\n    this.categoryObj = this.categories.map(function(it) {\n      return {key: it, y: (that.categories.indexOf(it) + 1) / ( that.categories.length + 1)};\n    });\n    this.central = true;\n  },\n  bind: function() {\n    var that = this;\n    this.svg.selectAll(\"text.central\")\n      .data(this.categoryObj)\n      .enter().append(\"text\").attr({class: \"central\"}).text(function(it) { return it.key;});\n    this.svg.selectAll(\"line.central\")\n      .data(this.categoryObj)\n      .enter().append(\"line\").attr({class: \"central\"});\n    var circles = this.svg.selectAll(\"circle\").data(this.data);\n    circles.enter().append(\"circle\");\n    circles.on(\"mousemove\", function(it) {\n      var x = d3.event.clientX;\n      var y = d3.event.clientY;\n      d3.select(\"#chartPopup\").style({\n        display: \"block\",\n        top: y + \"px\",\n        left: x + \"px\"\n      });\n      d3.select(\"#chartTitleText\").text(it.name);\n      d3.select(\"#chartCategory\").text(\" ( \" + it.category+\" )\");\n      d3.select(\"#chartRate\").text((parseInt(10 * it.rate)/10) + \"%\");\n      d3.select(\"#chartValue\").text(it.size);\n    });\n    circles.exit().remove();\n    d3.select(\"#btn-whole\").on(\"click\", function() {\n      that.central = true;\n      for(var idx = 0; idx < that.data.length; idx++ )  {\n        that.data[idx].cy = that.h / 2;\n      }\n      that.force.start();\n    });\n    d3.select(\"#btn-category\").on(\"click\", function() {\n      that.central = false;\n      for(var idx = 0; idx < that.data.length; idx++ )  {\n        item = that.data[idx];\n        item.cy = (that.categories.indexOf(item.category) + 1 )* that.h / (that.categories.length + 1);\n      }\n      that.force.start();\n    });\n  },\n  tick: function() {\n    // collision detection, for prevent circles from overlapping\n    var alpha = this.force.alpha();\n    // if(alpha < 0.08) this.force.stop();\n    for(i = 0; i < this.data.length ; i++) {\n      var item = this.data[i];\n      if(Math.abs(item.y - item.cy) > 0) {\n        item.y = item.y + (item.cy - item.y ) * alpha / 5.0;\n      }\n      if(Math.abs(item.x - item.cx) > 0) {\n        item.x = item.x + ( item.cx - item.x ) * alpha / 2.0;\n      }\n    }\n    for(i = 0 ; i < this.data.length ; i++) {\n      for(j = 0 ; j < this.data.length ; j++) {\n        it = this.data[i];\n        jt = this.data[j];\n        if(i==j) continue; // not collide with self\n        r = it.r + jt.r;\n        itx = it.x;\n        ity = it.y;\n        jtx = jt.x;\n        jty = jt.y;\n        d = Math.sqrt( (itx - jtx) * (itx - jtx) + (ity - jty) * (ity - jty) );\n        if(r > d) { // distance smaller than radius means collision\n          dr = ( r - d ) / ( d * 1 );\n          it.x = it.x + ( itx - jtx ) * dr * 0.1;\n          it.y = it.y + ( ity - jty ) * dr * 0.1;\n        }\n    }};\n    this.render(this.root, this.data, this.config);\n  },\n  resize: function() {\n    var that = this;\n    this.w = $(this.root).width();\n    this.h = $(this.root).height();\n    this.mh = 10;\n    this.mw = 100;\n    this.svg.attr({ viewBox: [0,0,this.w,this.h].join(\" \") });\n    this.xscale = d3.scale.linear().domain([0,100])\n      .range([this.mw + this.categorySize * 12, this.w - this.mw]);\n    this.rscale = d3.scale.linear().domain(d3.extent(this.radiusRange)).range([1,10]);\n    for(var idx = 0; idx < this.data.length ;idx ++ ){\n      var item = this.data[idx];\n      item.cx = this.xscale(item.rate);\n      item.x = item.cx;\n      if(that.central) item.cy = that.h / 2;\n      else item.cy = (\n        (this.categories.indexOf(item.category) + 1 ) * that.h / (this.categories.length + 1)\n      );\n      item.y = item.cy;\n\t  item.px = item.x;\n\t  item.py = item.y;\n      item.r = this.rscale(item.radius);\n    }\n    this.force = d3.layout.force().nodes(this.data)\n      .size([this.w,this.h]).gravity(0.05).charge(-10)\n      .on(\"tick\", function(){ that.tick(); });\n    this.force.size([this.w, this.h]);\n    this.force.start();\n  },\n  render: function() {\n    var that = this;\n    this.svg.selectAll(\"circle\").attr({\n      cx: function(it) { return it.x; },\n      cy: function(it) { return it.y; },\n      r:  function(it) { return it.r; }\n    }).style({\n      fill: function(it) {\n        var idx = parseInt(it.rate / 17);\n        return that.config.palette.colors[idx % that.config.palette.colors.length].hex;\n      },\n      stroke: \"#444\",\n    });\n    this.svg.selectAll(\"line.central\")\n      .attr({\n        x1: that.mw + this.categorySize * 12,\n        x2: that.w - that.mw,\n        \"stroke-dasharray\": \"1 2\",\n        stroke: \"#777\"\n      }).transition().duration(100).attr({\n        y1: function(it) { \n          return that.h * (that.central?0.5:it.y);\n        },\n        y2: function(it) {\n          return that.h * (that.central?0.5:it.y);\n        },\n        opacity: function(it) {\n          return (that.central?0.1:0.8);\n        }\n      });\n    this.svg.selectAll(\"text.central\")\n      .attr({\n        x: that.mw + that.categorySize,\n        \"text-anchor\": \"end\",\n        \"baseline-dominant\": \"central\"\n      }).transition().duration(100).attr({\n        y: function(it) {\n          return (that.central?0.5:it.y) * that.h;\n        },\n        opacity: function(it) {\n          return (that.central?0:0.8);\n        }\n      })\n  }\n});","lines":199,"size":7167},"assets":[],"isType":false,"ownerName":"Kirby Wu","likes":0,"parent":null,"createdTime":1458143689021,"basetype":null,"visualencoding":null,"category":null,"modifiedTime":1458580375414}