{"theme":null,"basetype":"3","visualencoding":["6","8"],"category":["1","5"],"data":[],"type":{"location":"server","name":"chart"},"owner":"o3tgs6","key":"oybllu","permission":{"switch":["public"],"value":[{"switch":"public","perm":"fork"}]},"name":"Chord Diagram","desc":"display relationship between entities with chord block","tags":[],"doc":{"name":"document","type":"html","content":"","lines":1,"size":0},"style":{"name":"stylesheet","type":"css","content":"","lines":1,"size":0},"code":{"name":"code","type":"javascript","content":"var module = {};\nmodule.exports = plotdb.chart.create({\n  sample: d3.range(36).map(function(it) {\n    var i = it % 6;\n    var j = parseInt(it / 6);\n    var name = [\"UK\", \"France\", \"Germany\", \"Dutch\", \"Spanish\", \"Italy\"];\n    return {source: name[i], target: name[j], value: Math.random()};\n  }),\n  dimension: {\n    value: { type: [plotdb.Number], require: true, desc: \"flow from source to target\" },\n    source: { type: [], require: true, desc: \"name of source\"},\n    target: { type: [], require: true, desc: \"name of target\"}\n  },\n  config: {\n    padding: { name: \"Padding\", type: [plotdb.Number], default: 10},\n    margin: { name: \"Margin\", type: [plotdb.Number], default: 10},\n    thick: { name: \"Thickness\", type: [plotdb.Number], default: 10},\n    palette: {name: \"Palette\", type: [plotdb.Palette], default: plotdb.Palette['default'],\n              hint: plotdb.Palette.subtype.qualitative}\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.datagroup = this.svg.append(\"g\");\n    this.sources = d3.nest().key(function(it) { return it.source; }).map(this.data, d3.map).keys();\n    this.targets = d3.nest().key(function(it) { return it.target; }).map(this.data, d3.map).keys();\n    this.names = d3.nest().key(function(it) { return it; }).map(this.sources.concat(this.targets), d3.map).keys();\n    this.matrix = d3.range(this.names.length).map(function(it) {\n      return d3.range(that.names.length).map(function(it) { return 0; });\n    });\n    this.data.forEach(function(it) {\n      that.matrix[that.names.indexOf(it.source)][that.names.indexOf(it.target)] = it.value;\n    });\n  },\n  bind: function() {\n    var that = this;\n    this.datagroup.selectAll(\"path.arc\").data(this.chord.groups).enter().append(\"path\").attr({class: \"arc data\"});\n    this.datagroup.selectAll(\"path.chord\").data(this.chord.chords).enter().append(\"path\").attr({class: \"chord connect\"});\n  },\n  resize: function() {\n    var that = this;\n    var box = this.root.getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height - 10;\n    this.size = (width>height?height:width)/2;\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.color = d3.scale.ordinal()\n      .range(this.config.palette.colors.map(function(it) { return it.hex; }));\n    this.chord = d3.layout.chord().padding(0.05).matrix(this.matrix);\n    this.chordpath = d3.svg.chord().radius(this.size - this.config.thick - this.config.margin);\n    this.arc = d3.svg.arc().innerRadius(this.size - this.config.thick - this.config.margin).outerRadius(this.size - this.config.margin);\n  },\n  render: function() {\n    var that = this;\n    this.datagroup.attr({\n      transform: [\"translate(\",(this.width/2),\",\",(this.height/2),\")\"].join(\"\")\n    });\n    this.datagroup.selectAll(\"path.arc\").attr({\n      d: this.arc,\n      fill: function(d,i) {\n        return that.color(d.index);\n      },\n      stroke: function(d,i) {\n        return d3.rgb(that.color(d.index)).darker(2.2).toString();\n      },\n    });\n    this.datagroup.selectAll(\"path.chord\").attr({\n      d: this.chordpath,\n      fill: function(d,i) {\n        return that.color(d.source.index);\n      },\n      stroke: function(d,i) {\n        return d3.rgb(that.color(d.source.index)).darker(1).toString();\n      },\n      opacity: 0.8\n    });\n  }\n});","lines":82,"size":3449},"config":{"padding":{"name":"Padding","type":[{"name":"Number","level":3}],"default":10,"value":10},"margin":{"name":"Margin","type":[{"name":"Number","level":3}],"default":10,"value":10},"thick":{"name":"Thickness","type":[{"name":"Number","level":3}],"default":10,"value":10},"palette":{"name":"Palette","type":[{"name":"Palette","level":5,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"}}],"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"hint":"qualitative","value":{"colors":[{"hex":"#7d2d21"},{"hex":"#DC5356"},{"hex":"#FFE670"},{"hex":"#dae275"},{"hex":"#4CC786"},{"hex":"#307D99"}]}}},"dimension":{"value":{"type":[{"name":"Number","level":3}],"require":true,"desc":"flow from source to target"},"source":{"type":[],"require":true,"desc":"name of source"},"target":{"type":[],"require":true,"desc":"name of target"}},"assets":[],"isType":false,"likes":0,"parent":null,"createdTime":1458227546964,"ownerName":"Kirby Wu","modifiedTime":1458579842216}