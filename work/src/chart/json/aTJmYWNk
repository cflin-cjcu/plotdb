{"theme":null,"basetype":null,"visualencoding":null,"category":null,"data":[],"type":{"location":"server","name":"chart"},"owner":"o3tgs6","key":"i2facd","permission":{"switch":["public"],"value":[{"switch":"public","perm":"fork"}]},"name":"Grid Heatmap","desc":"heatmap style grid blocks. categorized.","tags":[],"doc":{"name":"document","type":"html","content":"","lines":1,"size":0},"style":{"name":"stylesheet","type":"css","content":"","lines":1,"size":0},"code":{"name":"code","type":"javascript","content":"var module = {};\nmodule.exports = plotdb.chart.create({\n  sample: d3.range(30).map(function(it) {\n    return {\n      category: [\"HR\",\"IT\",\"RD\",\"GM\",\"FIN\"][parseInt(Math.random() * 5)],\n      value: d3.range(15).map(function(it) { return Math.random(); }),\n      name: [\"James\",\"Bob\",\"David\",\"Alice\",\"Frank\",\"Cythina\"][parseInt(Math.random() * 6)]\n    };\n  }),\n  dimension: {\n    category: { type: [], require: false, desc: \"category of item\"},\n    name: { type: [], require: false, desc: \"name of item\"},\n    value: { type: [plotdb.Number], multiple: true, require: true,\n            desc: \"value of indexes for an item\" }\n  },\n  config: {\n    fontSize: { name: \"Font Size\", type: [plotdb.Number], default: 10 },\n    margin: { name: \"Margin\", type: [plotdb.Number], default: 10 },\n    padding: { name: \"Padding\", type: [plotdb.Number], default: 10 },\n    catcolor: { name: \"category\", type: [plotdb.Palette], \n      default: plotdb.Palette.default, hint: plotdb.Palette.subtype.qualitative },\n    valcolor: { name: \"category\", type: [plotdb.Palette], \n      default: plotdb.Palette.default, hint: plotdb.Palette.subtype.sequential }\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.cats = d3.map(\n      this.data.map(function(it) { return it.category; }),\n      function(it) { return it; }\n    ).keys();\n    this.nameMaxLen = d3.max(\n      this.data.map(function(it) { return (it.name || \"\").length; })\n               .concat(this.cats.map(function(it) { return it.length; }))\n    );\n    if(this.data.length && this.data[0].value) {\n      this.valuecount = this.data[0].value.length;\n    } else this.valuecount = 0;\n    this.parsed = d3.nest()\n      .key(function(it) { return it.category; }).entries(this.data);\n    this.values = this.data\n      .map(function(it) { return it.value; })\n      .reduce(function(a,b) { return a.concat(b); },[]);\n    this.valuerange = d3.extent(this.values);\n    offset = 0;\n    for(var i = 0; i < this.parsed.length; i++) {\n      this.parsed[i].offset = offset;\n      offset += (this.parsed[i].values.length + 1);\n    }\n  },\n  bind: function() {\n    var that = this;\n    this.svg.selectAll(\"g.category\").data(this.parsed)\n      .enter().append(\"g\").attr({class: \"category\"}).each(function(d,i) {\n        var node = d3.select(this);\n        node.append(\"text\").attr({class: \"category-title\"}).text(d.key);\n        node.selectAll(\"g.data-group\").data(d.values).enter().append(\"g\").attr({class: \"data-group\"}).each(function(d,i) {\n          var node = d3.select(this);\n          node.append(\"text\").attr({class: \"title\"});\n          node.selectAll(\"g.data\").data(d.value).enter().append(\"g\").attr({class: \"data\"}).each(function(d,i) {\n            var node = d3.select(this);\n            node.append(\"rect\").attr({class: \"data\"});\n          });\n        });\n      });\n  },\n  resize: function() {\n    var that = this;\n    var box = this.root.getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height - 10;\n    this.nameWidth = (this.nameMaxLen + 2) * this.config.fontSize;\n    this.blocksize = ( width - this.nameWidth - 2 * this.config.margin) / (this.valuecount + 2);\n    if(this.blocksize > (height / 10)) this.blocksize = height / 10;\n    var maxheight = this.blocksize * (this.cats.length + this.data.length + 2);\n    if(height < maxheight) height = this.height = maxheight;\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.vcscale = d3.scale.quantile()\n      .domain([0,this.valuerange[1]])\n      .range(this.config.valcolor.colors.map(function(it) { return it.hex; }));\n  },\n  render: function() {\n    var that = this;\n    this.svg.selectAll(\"g.category\").attr({\n      transform: function(d,i) {\n        return \"translate(0,\" + ((d.offset + 1) * that.blocksize) + \")\";\n      }\n    }).each(function() {\n      var node = d3.select(this);\n      node.select(\"text.category-title\").attr({\n        x: that.nameWidth + that.blocksize,\n        y: -that.blocksize / 2,\n        \"text-anchor\": \"start\",\n        \"dominant-baseline\": \"middle\"\n      });\n      node.selectAll(\"g.data-group\")\n      .attr({\n        transform: function(d,i) {\n          return \"translate(0,\" + (i * (that.blocksize)) + \")\";\n        },\n      }).each(function(d,i) {\n        var node = d3.select(this);\n        node.select(\"text.title\").attr({\n          x: that.nameWidth - that.config.fontSize + that.blocksize / 2,\n          y: that.blocksize / 2,\n          \"text-anchor\": \"end\",\n          \"dominant-baseline\": \"middle\"\n        }).text(d.name);\n        node.selectAll(\"rect.data\").attr({\n          y: 0,\n          x: function(d,i) { return (i+1) * that.blocksize + that.nameWidth; },\n          width: that.blocksize - that.config.padding,\n          height: that.blocksize - that.config.padding,\n          rx: that.config.radius,\n          ry: that.config.radius,\n          fill: function(d,i) { return that.vcscale(d); }\n        });\n      });\n    });\n  }\n});","lines":125,"size":5085},"config":{"fontSize":{"name":"Font Size","type":[{"name":"Number","level":3}],"default":10,"value":10},"margin":{"name":"Margin","type":[{"name":"Number","level":3}],"default":10,"value":10},"padding":{"name":"Padding","type":[{"name":"Number","level":3}],"default":10,"value":10},"catcolor":{"name":"category","type":[{"name":"Palette","level":5,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"}}],"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"hint":"qualitative","value":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]}},"valcolor":{"name":"category","type":[{"name":"Palette","level":5,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"}}],"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"hint":"sequential","value":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]}}},"dimension":{"category":{"type":[],"require":false,"desc":"category of item"},"name":{"type":[],"require":false,"desc":"name of item"},"value":{"type":[{"name":"Number","level":3}],"multiple":true,"require":true,"desc":"value of indexes for an item"}},"assets":[],"isType":false,"likes":0,"parent":null,"createdTime":1458631241044,"ownerName":"Kirby Wu","modifiedTime":1458635639485}