{"0":"g","1":"k","2":"p","3":"1","4":"g","5":"o","theme":"1fater3","config":{"padding":{"type":[{"name":"Number","level":3},{"name":"Percent","level":3}],"default":10,"value":"10"},"margin":{"type":[{"name":"Number","level":3},{"name":"Percent","level":3}],"default":10,"value":"10"},"radius":{"type":[{"name":"Number","level":3}],"default":5,"value":"2"},"palette":{"type":[{"name":"Palette","level":5,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]},"qualitative":{"colors":[{"hex":"#c05ae0"},{"hex":"#cf2d0c"},{"hex":"#e9ab1e"},{"hex":"#86ffb5"},{"hex":"#64dfff"},{"hex":"#003f7d"}]},"binary":{"colors":[{"hex":"#ff8356"},{"hex":"#0076a1"}]},"sequential":{"colors":[{"hex":"#950431"},{"hex":"#be043e"},{"hex":"#ec326d"},{"hex":"#fc82a9"},{"hex":"#febed2"},{"hex":"#fee6ee"}]},"diverging":{"colors":[{"hex":"#74001a"},{"hex":"#cd2149"},{"hex":"#f23971"},{"hex":"#ff84ab"},{"hex":"#ffc3d7"},{"hex":"#f2f2dd"},{"hex":"#b8d9ed"},{"hex":"#81b1d0"},{"hex":"#3d8bb7"},{"hex":"#0071a8"},{"hex":"#003558"}]},"subtype":{"qualitative":"qualitative","binary":"binary","sequential":"sequential","diverging":"diverging"}}],"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"hint":"qualitative","value":{"colors":[{"hex":"#7d2d21"},{"hex":"#DC5356"},{"hex":"#FFE670"},{"hex":"#dae275"},{"hex":"#4CC786"},{"hex":"#307D99"}],"name":"qualitative"}},"fontSize":{"type":[{"name":"Number","level":3}],"default":12,"value":20},"direction":{"type":[{"name":"Choice","level":4,"values":["Vertical","Horizontal"]}],"default":"Vertical","value":"Vertical"},"showLabel":{"type":[{"name":"Boolean","level":2}],"default":true,"value":true},"showAxis":{"type":[{"name":"Boolean","level":2}],"default":true,"value":true},"axisSize":{"type":[{"name":"Number","level":3}],"default":10,"value":"40"}},"dimension":{"length":{"type":[{"name":"Number","level":3}],"require":true,"desc":"length of bar"},"base":{"type":[{"name":"Number","level":3}],"require":true,"desc":"offset of bar"},"name":{"type":[],"require":false,"desc":"???","fields":[]},"text":{"type":[],"require":false,"desc":"???","fields":[]}},"data":[],"type":{"location":"server","name":"chart"},"owner":"o3tgs6","key":"1kjnc7b","permission":{"switch":["public"],"value":[{"switch":"public","perm":"fork"}]},"name":"Length Chart","desc":"a standard length chart.","tags":[""],"doc":{"name":"document","type":"html","content":"<h3>Length Bar</h3>","lines":1,"size":19},"style":{"name":"stylesheet","type":"css","content":"h3 {\n  text-align: center;\n  font-family: Arial;\n}\n\n","lines":6,"size":52},"code":{"name":"code","type":"javascript","content":"var module = {};\nmodule.exports = plotdb.chart.create({\n  sample: d3.range(20).map(function(it) {\n    var len = parseInt(Math.random() * 100);\n    var base = parseInt(Math.random() * 50);\n    return {\n      length: len,\n      base: base,\n      name: [\"John\",\"Joe\",\"Jacob\",\"Jessy\",\"Jim\"][parseInt(Math.random()*5)],\n      text: len\n    };\n  }),\n  dimension: {\n    length: { type: [plotdb.Number], require: true, desc: \"length of bar\"},\n    base:  { type: [plotdb.Number], require: true, desc: \"offset of bar\"},\n    name:  { type: [], require: false, desc: \"???\"},\n    text:  { type: [], require: false, desc: \"???\"}\n  },\n  config: {\n    padding:   { type: [plotdb.Number, plotdb.Percent], default: 10 },\n    margin:    { type: [plotdb.Number, plotdb.Percent], default: 10 },\n    radius:    { type: [plotdb.Number], default: 5 },\n    palette:   { type: [plotdb.Palette], default: plotdb.Palette.default,\n               hint: plotdb.Palette.subtype.qualitative},\n    fontSize:  { type: [plotdb.Number], default: 12 },\n    direction: { type: [plotdb.Choice([\"Vertical\", \"Horizontal\"])], default: \"Vertical\" },\n    showLabel: { type: [plotdb.Boolean], default: true },\n    showAxis:  { type: [plotdb.Boolean], default: true },\n    axisSize:  { type: [plotdb.Number], default: 10 }\n  },\n\n  init: function() {\n    this.svg = d3.select(this.root).append(\"svg\").attr({\n      width: \"100%\", height: \"80%\",\n      viewBox: \"0 0 800 600\",\n      preserveAspectRatio: \"xMidYMid\"\n    });\n  },\n\n  bind: function() {\n    this.bar = this.svg.selectAll(\"rect.bar\").data(this.data);\n    this.bar.enter().append(\"rect\").attr({class: \"bar\"});\n    this.bar.exit().remove();\n    this.name = this.svg.selectAll(\"text.name\").data(this.data);\n    this.name.enter().append(\"text\").attr({class: \"name\"});\n    this.name.exit().remove();\n    this.label = this.svg.selectAll(\"text.label\").data(this.data);\n    this.label.enter().append(\"text\").attr({class: \"label\"});\n    this.label.exit().remove();\n    this.axisGroup = this.svg.append(\"g\");\n    this.axisLine = this.axisGroup.append(\"line\");\n  },\n\n  resize: function() {\n    var config = this.config;\n    var that = this;\n    var axis = (config.showAxis?config.axisSize:0);\n    this.color = d3.scale.ordinal().range(config.palette.colors.map(function(it) { return it.hex; }));\n    this.dir = (config.direction == \"Vertical\");\n    this.width = $(this.root).width();\n    this.height = $(this.root).height() - 100;\n    this.margin = config.margin;\n    this.size = (this.dir?[this.width, this.height]:[this.height, this.width]);\n\n    this.svg.attr({\n      width: this.width,\n      height: this.height,\n      \"viewBox\": [0, 0, this.width, this.height].join(\" \")\n    });\n\n    if(plotdb.Percent.test(config.padding)) {\n      this.padding = this.size[0] * (+config.padding.replace(/%/,\"\")/100);\n    } else {\n      this.padding = config.padding;\n    }\n    this.dim = [\n      [config.margin + (this.dir?axis:0), this.size[0] - config.margin - (this.dir?0:axis)],\n      [\n        [config.margin,\n         (this.dir && config.showLabel?config.fontSize:0),\n         (this.dir?0:config.fontSize * 5),\n        ].reduce(function(a,b) { return a + b; }, 0),\n        this.size[1] - config.margin - (this.dir || (!this.dir && config.showLabel)?config.fontSize:0)\n      ]\n    ];\n    this.lens = this.data.map(function(it) { return it.length + it.base; });\n    this.len = [\n      (( this.dim[0][1] - this.dim[0][0] ) / this.data.length) - this.padding,\n      d3.scale.linear().domain([0, d3.max(this.lens)]).range([0, this.dim[1][1] - this.dim[1][0]]),\n      d3.scale.linear().domain([0, d3.max(this.lens)]).range([this.dim[1][1] - this.dim[1][0], 0])\n    ];\n    this.origin = [\n      function(d,i) { \n        return (\n          ( that.len[0] + that.padding ) * i + ( that.padding / 2) +\n          (that.dir?axis:0) + that.margin\n        );\n      },\n      (this.dir?(function(d,i) { return that.dim[1][1] - that.len[1](d.length + d.base); }):function(d,i) { return that.dim[1][0] + that.len[1](d.base); })\n    ];\n    this.axisFunc = d3.svg.axis().orient(this.dir?\"left\":\"bottom\")\n      .scale(this.dir?this.len[2]:this.len[1])\n      .tickPadding(10)\n      .tickSize(3,1);\n  },\n\n  render: function() {\n    var that = this;\n    var name = (this.dir?\"x y width height dx dy\":\"y x height width dy dx\").split(\" \");\n    var config = this.config;\n    this.bar.attr(name[0], this.origin[0]);\n    this.bar.attr(name[1], this.origin[1]);\n    this.bar.attr(name[2], this.len[0]);\n    this.bar.attr(name[3], function(it) { return that.len[1](it.length); });\n    this.bar.attr({\n      rx: config.radius,\n      ry: config.radius,\n      fill: function(d,i) { return that.color(i); },\n      stroke: \"none\"\n    });\n\n    this.name.attr(name[0], this.origin[0]);\n    this.name.attr(name[1], this.origin[1]);\n    this.name.attr(name[4], this.len[0] / 2);\n    this.name.attr(name[5], function(it) { \n      return (that.dir?that.len[1](it.length) + config.fontSize:-config.fontSize)\n    });\n\n    this.name.attr({\n      \"font-size\": config.fontSize,\n      \"text-anchor\": (this.dir?\"middle\":\"end\"),\n      \"dominant-baseline\": \"central\",\n    }).text(function(it) { return it.name; });\n\n    this.label.attr(name[0], this.origin[0]);\n    this.label.attr(name[1], this.origin[1]);\n    this.label.attr(name[4], this.len[0] / 2);\n    this.label.attr(name[5], function(it) { \n      return (that.dir?-config.fontSize:(that.len[1](it.length) + config.fontSize));\n    });\n\n    this.label.attr({\n      \"font-size\": config.fontSize,\n      \"text-anchor\": (this.dir?\"middle\":\"start\"),\n      \"dominant-baseline\": \"central\"\n    }).text(function(it) { return (config.showLabel?it.length:\"\"); });\n\n    this.axisGroup.attr({\n      \"transform\": function(it) {\n        if(that.dir) {\n          return [\"translate(\",that.dim[0][0],\",\",that.dim[1][0],\")\"].join(\"\");\n        } else {\n          return [\"translate(\",that.dim[1][0],\",\",that.dim[0][1],\")\"].join(\"\");\n        }\n      }\n    });\n    if(config.showAxis) {\n      this.axisGroup.style({\"display\": \"block\"});\n      this.axisGroup.call(this.axisFunc);\n      this.axisGroup.selectAll(\"text\").attr({\n        \"font-size\": config.fontSize\n      });\n      this.axisGroup.selectAll(\"line\").attr({\n        \"stroke\": \"#000\"\n      });\n    } else {\n      this.axisGroup.style({\"display\": \"none\"});\n    }\n  }\n});\n","lines":171,"size":6308},"assets":[],"isType":false,"createdTime":1455695768478,"modifiedTime":1458278980598,"ownerName":"Kirby Wu","likes":0,"parent":null,"basetype":"1","visualencoding":["3"],"category":["5"]}