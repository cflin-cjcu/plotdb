{"theme":null,"data":[],"type":{"location":"server","name":"chart"},"owner":"o3tgs6","key":"4lmew4","permission":{"switch":["public"],"value":[{"switch":"public","perm":"fork"}]},"name":"Bubble Array","desc":"3 dimensional visualization represented by bubble's position and size.","tags":[""],"doc":{"name":"document","type":"html","content":"<h1 id=\"chart-title\" style=\"text-align:center;font-weight:light\">Line Chart</h1>\n<div id=\"popup\" class=\"popup box\">\n  <div class=\"title\"></div>\n  <div class=\"desc\"></div>\n</div>\n<div id=\"legend\" class=\"legend\">","lines":6,"size":210},"style":{"name":"stylesheet","type":"css","content":"svg, body, text {\n  font-family: arial;\n  color: #222;\n  fill: #222;\n  font-size: 12px;\n}\ntext {\n  text-anchor: middle;\n  dominant-baseline: central;\n}\ncircle, rect, path {\n  fill: #eee;\n  stroke: #555;\n  stroke-width: 2;\n}\nh3 {\n  text-align: center;\n  font-family: Arial;\n}\n\n.axis.horizontal {\n}\n\n.axis .tick line {\n  stroke: #222;\n  stroke-width: 2\n}\n.axis.horizontal .tick text {\n}\n\n.axis .domain, .axis .tick line {\n  display: none\n}\n\n.axis.horizontal .label {\n}\n\n.popup {\n  position: absolute;\n  background: rgba(0,0,0,1.0);\n  color: #fff;\n  padding: 5px 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  display: none;\n}\n.popup .title, .popup .desc {\n}\n.popup .shape {\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background: #fff;\n  position: absolute;\n  left: 10px;\n  top: 7px;\n}\n.popup:after {\n  content: \" \";\n  display: block;\n  width: 10px;\n  height: 10px;\n  background: #ff0;\n  position: absolute;\n  transform: rotate(45deg);\n  background: rgba(0,0,0,1.0);\n  top: 50%;\n  margin-top: -5px;\n}\n.popup.left:after {\n  right: -5px;\n}\n.popup.right:after {\n  left: -5px;\n}\n.legend {\n  text-align: center;\n}\n.legend .entry{\n  display: inline-block;\n  padding: 5px 15px 5px 5px;\n  margin-right: 5px;\n  cursor: pointer;\n\n}\n.legend .entry:hover {\n  background: rgba(255,255,255,0.5);\n  transform: scale(1.2);\n}\n.legend .entry .mark {\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  vertical-align: middle;\n  margin-right: 5px;\n}\n.legend .entry .name {\n  display: inline-block;\n  vertical-align: middle;\n}\n","lines":102,"size":1553},"code":{"name":"code","type":"javascript","content":"var module = {};\nmodule.exports = plotdb.chart.create({\n  sample: [\"HR\",\"IT\",\"FIN\",\"RD\",\"GM\"].map(function(cat) {\n    return d3.range(10).map(function(idx) {\n      function name() {\n        return [\"James\",\"David\",\"Holmes\",\"Amelie\",\"Sharon\",\"Rob\"][parseInt(Math.random()*6)];\n      }\n      return {category: cat, order: idx, value: Math.random(), name: name()};\n    });\n  }).reduce(function(a,b) { return a.concat(b); }, []),\n  dimension: {\n    category: { type: [], require: true, desc: \"category\" },\n    order: { type: [plotdb.Number], require: true, desc: \"y-axis of circle\" },\n    value: { type: [plotdb.Number], require: true, desc: \"size of circle\" },\n    name: { type: [], require: false, desc: \"tag of circle\" }\n  },\n  config: {\n    padding: { name: \"Padding\", type: [plotdb.Number], default: 10, rebindOnChange: true },\n    marginV: { name: \"Vertical Margin\", type: [plotdb.Number], default: 10, rebindOnChange: true },\n    marginH: { name: \"Horizon Margin\", type: [plotdb.Number], default: 10, rebindOnChange: true },\n    palette: { name: \"Palette\", type: [plotdb.Palette], default: plotdb.Palette.default }\n  },\n  init: function() {\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.xaxisGroup = this.svg.append(\"g\").attr({class: \"axis horizontal\"});\n    this.yaxisGroup = this.svg.append(\"g\").attr({class: \"axis vertical\"});\n    this.popup = {};\n    this.popup.root = d3.select(document.getElementById(\"popup\"));    \n    this.popup.title = d3.select(this.popup.root[0][0].querySelector(\".title\"));\n    this.popup.desc = d3.select(this.popup.root[0][0].querySelector(\".desc\"));\n\n    this.categories = d3.map(this.data, function(it) { return it.category;}).keys();\n    this.orders = this.data.map(function(it) { return it.order; });\n    this.values = this.data.map(function(it) { return it.value; });\n  },\n  bind: function() {\n    var that = this;\n    this.resize();\n    this.circles = this.svg.selectAll(\"circle\").data(this.data);\n    this.circles.enter().append(\"circle\")\n      .on(\"mouseover\", function(it) { that.target = it; that.render();})\n      .on(\"mouseout\", function(it) { that.target = null; that.render();});\n  },\n  resize: function() {\n    var box = this.root.getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height - 100;\n    var that = this;\n    this.yaxisWidth = 20;\n    this.xaxisHeight = 20;\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.colors = d3.scale.ordinal().range(\n      this.config.palette.colors.map(function(it) { return it.hex; })\n    );\n    this.xscale = d3.scale.ordinal()\n      .domain(that.categories)\n      .range(d3.range(that.categories.length).map(function(it) {\n        console.log(that.categories.length, it);\n        return that.config.marginH + that.yaxisWidth + \n          it * (width - 2 * that.config.marginH) / (that.categories.length - 1);\n      }));\n    this.yscale = d3.scale.linear()\n      .domain(d3.extent(that.orders))\n      .range([height - that.config.marginV - that.xaxisHeight, that.config.marginV]);\n    this.rscale = d3.scale.linear()\n      .domain(d3.extent(that.values))\n      .range([1,20]);\n    this.xaxis = d3.svg.axis()\n      .scale(that.xscale).orient(\"bottom\")\n      .tickValues(that.category);\n    this.xaxisGroup.call(this.xaxis);\n    this.yaxis = d3.svg.axis()\n      .scale(that.yscale).orient(\"left\")\n      .tickValues(that.order);\n    this.yaxisGroup.call(this.yaxis);\n  },\n  render: function() {\n    var that = this;\n    this.xaxisGroup.attr({\n      transform: function(it) {\n        return [\n          \"translate(\",\n          0,\n          \" \",\n          that.height - that.xaxisHeight - that.config.marginV + 20,\n          \")\"\n        ].join(\"\");\n      }\n    });\n    this.yaxisGroup.attr({\n      transform: function(it) {\n        return [\n          \"translate(\",\n          that.config.marginH - 20,\n          \" \",\n          \")\"\n        ].join(\"\");\n      }\n    });\n    this.circles.attr({\n      cx: function(it) { return that.xscale(it.category); },\n      cy: function(it) { return that.yscale(it.order); },\n      r:  function(it) { return that.rscale(it.value); }\n    }).style({\n      fill: function(it) { return that.colors(it.category); },\n      stroke: function(it) { return d3.rgb(that.colors(it.category)).darker().toString(); }\n    });\n    if(this.target) {\n      this.popup.root.style({display: \"block\"});\n      this.popup.title.text(this.target.name);\n      this.popup.desc.text(\n        this.target.category + \" ( \" + parseInt(100 * this.target.value)/100 + \" )\"\n      );\n      setTimeout(function() {\n        if(!that.target) return;\n        var x = that.xscale(that.target.category);\n        var y = that.yscale(that.target.order);\n        var direction = \"left\";\n\t    var bbox = that.popup.root[0][0].getBoundingClientRect();\n        var svgbox = that.svg[0][0].getBoundingClientRect();\n        if( x < that.width/2 ) {\n          x = x + 20;\n          direction = \"right\";\n        } else {\n          x = x - 20 - (bbox.right - bbox.left);\n        }\n        that.popup.root.attr({\n          class: \"popup \" + direction\n        });\n        that.popup.root.style({\n          left: (x + svgbox.left) + \"px\",\n          top: (y + svgbox.top - (bbox.bottom - bbox.top)/2) + \"px\"\n        });\n      }, 0);\n    }\n  }\n});","lines":141,"size":5392},"config":{"padding":{"name":"Padding","type":[{"name":"Number","level":3}],"default":10,"rebindOnChange":true,"value":10},"marginV":{"name":"Vertical Margin","type":[{"name":"Number","level":3}],"default":10,"rebindOnChange":true,"value":"30"},"marginH":{"name":"Horizon Margin","type":[{"name":"Number","level":3}],"default":10,"rebindOnChange":true,"value":"200"},"palette":{"name":"Palette","type":[{"name":"Palette","level":5,"re":{},"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"plotdb":{"colors":[{"hex":"#ed1d78"},{"hex":"#c59b6d"},{"hex":"#8cc63f"},{"hex":"#28aae2"}]}}],"default":{"colors":[{"hex":"#1d3263"},{"hex":"#226c87"},{"hex":"#f8d672"},{"hex":"#e48e11"},{"hex":"#e03215"},{"hex":"#ab2321"}]},"value":{"colors":[{"hex":"#7a322a"},{"hex":"#d52c2a"},{"hex":"#f93634"},{"hex":"#dddb83"},{"hex":"#ede6de"},{"hex":"#fdfffa"},{"hex":"#dbdbdb"},{"hex":"#48462d"}]}}},"dimension":{"category":{"type":[],"require":true,"desc":"category"},"order":{"type":[{"name":"Number","level":3}],"require":true,"desc":"y-axis of circle"},"value":{"type":[{"name":"Number","level":3}],"require":true,"desc":"size of circle"},"name":{"type":[],"require":false,"desc":"tag of circle"}},"assets":[],"isType":false,"createdTime":1455858308296,"modifiedTime":1458279348204,"ownerName":"Kirby Wu","likes":0,"parent":null,"basetype":"5","visualencoding":["6"],"category":["1"]}